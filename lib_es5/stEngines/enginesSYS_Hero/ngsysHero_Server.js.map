{"version":3,"sources":["stEngines/enginesSYS_Hero/ngsysHero_Server.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;AAUA,IAAI,SAAS,QAAQ,cAAR,CAAb;AACA,IAAI,eAAe,QAAQ,oBAAR,CAAnB;;AAEA,IAAI,2BAA2B,QAAQ,+BAAR,EAAyC,SAAxE;AACA,IAAI,iBAAiB,QAAQ,+BAAR,EAAyC,cAA9D;AACA,IAAI,+BAA+B,QAAQ,iCAAR,EAA2C,4BAA9E;;AAGA,IAAI,WAAW,QAAQ,gBAAR,CAAf;AACA,IAAI,iBAAiB,QAAQ,sBAAR,CAArB;;AAEA,IAAI,6BAA6B,QAAQ,iCAAR,EAA2C,SAA5E;AACA,IAAI,mBAAmB,QAAQ,iCAAR,EAA2C,gBAAlE;AACA,IAAI,iCAAiC,QAAQ,mCAAR,EAA6C,8BAAlF;;AAGA,IAAI,oBAAoB,QAAQ,sBAAR,CAAxB;AACA,IAAI,0BAA0B,kBAAkB,uBAAhD;AACA,IAAI,gBAAgB,kBAAkB,aAAtC;;;;;;;;;IAUM,Y;;;AAEL,uBAAY,MAAZ,EAAoB;AAAA;;AAAA,yFAEb,MAFa;AAGnB;;;;+BAEY;;AAEZ;;;6BAEU;;AAEV;;;;EAbyB,Y;;;;;;;;;;IAwBrB,S;;;AAEL,oBAAY,MAAZ,EAAoB;AAAA;;AAAA,sFAEb,MAFa;AAKnB;;;;+BAEY;;AAEZ,OAAI,SAAS,IAAb;;;AAGA,UAAO,YAAP,GAAsB,IAAI,YAAJ,CAAkB,OAAO,MAAP,CAAc,YAAhC,CAAtB;AACA;;;;;;;;0BAMO;;AAEP,OAAI,WAAW,IAAf;;AAEA,UAAO,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAkB,MAAlB,EAA0B;;AAE5C,QAAI,UAAU;AACb,iBAAa,SAAS,MAAT,CAAgB,QADhB;AAEb,eAAW;;AAFE,KAAd;;;AAOA,aAAS,MAAT,CAAgB,cAAhB,CAA+B,IAA/B,CAAoC,yBAAyB,QAAzB,CAAkC,WAAtE,EAAoF,OAApF;;AAEA,YAAQ,OAAR;AAEA,IAbM,CAAP;AAeA;;;;;;;;yBAMM;;AAEN,OAAI,WAAW,IAAf;;AAEA,UAAO,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAkB,MAAlB,EAA0B;;AAE5C,QAAI,UAAU;AACb,iBAAa,SAAS,MAAT,CAAgB,QADhB;AAEb,eAAW;;AAFE,KAAd;;;AAOA,aAAS,MAAT,CAAgB,cAAhB,CAA+B,IAA/B,CAAoC,yBAAyB,QAAzB,CAAkC,UAAtE,EAAmF,OAAnF;AACA,YAAQ,OAAR;AACA,IAXM,CAAP;AAYA;;;;;;;;6BAMU,O,EAAQ;;AAElB,OAAI,WAAW,IAAf;AACA,OAAI,SAAS,SAAS,MAAtB;;AAEA,WAAQ,GAAR,CAAY,6BAAZ,E;AACA,WAAQ,GAAR,CAAY,OAAZ,E;;;AAGA,UAAO,IAAP,CAAY,yBAAyB,QAAzB,CAAkC,gBAA9C,EACE,EAAC,YAAa,SAAS,MAAT,CAAgB,QAA9B,EAAwC,WAAY,OAApD,EADF;AAKA;;;;EAlFsB,M;;;;;;;;;;IA8FlB,4B;;;AAGL,yCAAc;AAAA;;AAAA;AAGb;;;;;;;;;oCAMiB,Q,EAAU;;AAE3B,OAAI,QAAQ,IAAZ;;AAEA,OAAI,SAAS,IAAb;AACA,OAAI,KAAK,CAAT;;AAGA,QAAK,MAAM,WAAN,CAAkB,GAAlB,CAAsB,UAAS,CAAT,EAAY;AAAC,WAAO,EAAE,MAAF,CAAS,MAAhB;AAAyB,IAA5D,EAA8D,OAA9D,CAAsE,QAAtE,CAAL;AACA,OAAI,OAAO,CAAC,CAAZ,EAAe;AACd,aAAS,MAAM,WAAN,CAAkB,EAAlB,CAAT;AACA;;AAED,UAAO;AACN,gBAAY,MADN;AAEN,gBAAY;AAFN,IAAP;AAKA;;;;;;;;;mCAOgB,M,EAAQ;;AAExB,OAAI,QAAQ,IAAZ;;AAEA,OAAI,UAAU,MAAM,WAAN,CAAkB,MAAlB,CAAyB,UAAS,MAAT,EAAiB,EAAjB,EAAqB,QAArB,EAA+B;;AAErE,QAAI,OAAO,MAAP,CAAc,YAAd,KAA+B,MAAnC,EAA2C;AAC1C,YAAO,IAAP;AACA;AAED,IANa,CAAd;;AAQA,UAAO;AACN,kBAAc,QAAQ,MADhB;AAEN,eAAW;AAFL,IAAP;AAKA;;;;;;;;;;4BAQS,M,EAAQ;;AAEjB,OAAI,OAAO,IAAX;;AAEA,OAAI,eAAe,KAAK,iBAAL,CAAuB,OAAO,MAAP,CAAc,MAArC,CAAnB;;AAEA,OAAI,aAAa,QAAb,KAA0B,IAA9B,EAAoC;AACnC,UAAM,2BAAN;AACA;;AAED,QAAK,WAAL,CAAiB,IAAjB,CAAsB,MAAtB;;;AAGA,QAAK,YAAL,CAAkB,IAAlB,CAAuB,KAAK,SAAL,CAAe,MAAf,CAAsB,WAA7C,EAA0D,MAA1D;AAEA;;;;;;;;;;oCAQiB,M,EAAQ,O,EAAS;;AAElC,OAAI,OAAO,IAAX;;AAEA,OAAI,YAAY,SAAZ,IACF,YAAY,IADd,EACoB;AACnB,cAAU,EAAV;AACA;;AAED,OAAI,QAAQ,cAAR,KAA2B,SAA/B,EAA2C;AAC1C,WAAO,QAAQ,cAAf;AACA;;AAED,OAAI,SAAS,IAAI,SAAJ,CAAc,MAAd,CAAb;;AAEA,OAAI;AACH,SAAK,SAAL,CAAe,MAAf;AACA,IAFD,CAEE,OAAO,CAAP,EAAU;;AAEX,UAAM,wBAAwB,CAA9B;AACA;AAED;;;;;;;;uCAMoB,M,EAAQ;;AAE5B,OAAI,OAAO,IAAX;;;AAIA,OAAI,gBAAgB,KAAK,gBAAL,CAAsB,MAAtB,CAApB;;AAEA,OAAI,cAAc,OAAd,KAA0B,IAA9B,EAAoC;;;AAGnC,kBAAc,OAAd,CAAsB,CAAtB,EAAyB,MAAzB,CAAgC,cAAhC,CAA+C,IAA/C,CAAoD,KAAK,SAAL,CAAe,QAAf,CAAwB,cAA5E;AAEA,IALD,MAKO;AACN,YAAQ,GAAR,CAAY,wBAAZ,E;AACA;AAED;;;;EAlIyC,c;;;;;;;;;;IA6IrC,Y;;;AAEL,uBAAY,MAAZ,EAAoB;AAAA;;AAAA,yFAEb,MAFa;AAGnB;;;;+BAEY;;AAEZ;;;6BAEU;;AAEV;;;;EAbyB,c;;;;;;;;;;IAwBrB,W;;;AAEL,sBAAY,MAAZ,EAAoB;AAAA;;AAAA,wFAEb,MAFa;AAKnB;;;;+BAEY;;AAEZ,OAAI,WAAW,IAAf;;;AAGA,YAAS,cAAT,GAA0B,IAAI,YAAJ,CAAkB,SAAS,MAAT,CAAgB,cAAlC,CAA1B;AACA;;;;;;;;0BAMO;;AAEP,OAAI,aAAa,IAAjB;;AAEA,UAAO,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAkB,MAAlB,EAA0B;;AAE5C,QAAI,UAAU;AACb,mBAAe,WAAW,MAAX,CAAkB,UADpB;AAEb,eAAW;;AAFE,KAAd;;;AAOA,eAAW,MAAX,CAAkB,cAAlB,CAAiC,IAAjC,CAAsC,2BAA2B,QAA3B,CAAoC,aAA1E,EAA0F,OAA1F;;AAEA,YAAQ,OAAR;AAEA,IAbM,CAAP;AAeA;;;;;;;;yBAMM;;AAEN,OAAI,aAAa,IAAjB;;AAEA,UAAO,IAAI,OAAJ,CAAY,UAAS,OAAT,EAAkB,MAAlB,EAA0B;;AAE5C,QAAI,UAAU;AACb,mBAAe,WAAW,MAAX,CAAkB,UADpB;AAEb,eAAW;;AAFE,KAAd;;;AAOA,eAAW,MAAX,CAAkB,cAAlB,CAAiC,IAAjC,CAAsC,2BAA2B,QAA3B,CAAoC,YAA1E,EAAyF,OAAzF;AACA,YAAQ,OAAR;AACA,IAXM,CAAP;AAaA;;;;;;;;6BAMU,O,EAAQ;;AAElB,OAAI,aAAa,IAAjB;AACA,OAAI,SAAS,WAAW,MAAX,CAAkB,cAA/B;;AAEA,WAAQ,GAAR,CAAY,+BAAZ,E;AACA,WAAQ,GAAR,CAAY,OAAZ,E;;;AAGA,UAAO,IAAP,CAAY,2BAA2B,QAA3B,CAAoC,kBAAhD,EACE,EAAC,cAAe,WAAW,MAAX,CAAkB,UAAlC,EAA8C,WAAY,OAA1D,EADF;AAKA;;;;EAnFwB,Q;;;;;;;;;;IA6FpB,8B;;;AAGL,2CAAc;AAAA;;AAAA;AAGb;;;;;;;;;sCAMmB,U,EAAY;;AAE/B,OAAI,OAAO,IAAX;;AAEA,OAAI,WAAW,IAAf;AACA,OAAI,KAAK,CAAT;;AAGA,QAAK,KAAK,aAAL,CAAmB,GAAnB,CAAuB,UAAS,CAAT,EAAY;AAAC,WAAO,EAAE,MAAF,CAAS,MAAhB;AAAyB,IAA7D,EAA+D,OAA/D,CAAuE,UAAvE,CAAL;AACA,OAAI,OAAO,CAAC,CAAZ,EAAe;AACd,eAAW,KAAK,aAAL,CAAmB,EAAnB,CAAX;AACA;;AAED,UAAO;AACN,kBAAc,QADR;AAEN,gBAAY;AAFN,IAAP;AAKA;;;;;;;;;qCAOkB,M,EAAQ;;AAE1B,OAAI,QAAQ,IAAZ;;AAEA,OAAI,YAAY,MAAM,aAAN,CAAoB,MAApB,CAA2B,UAAS,QAAT,EAAmB,EAAnB,EAAuB,UAAvB,EAAmC;;AAE7E,QAAI,SAAS,MAAT,CAAgB,YAAhB,KAAiC,MAArC,EAA6C;AAC5C,YAAO,IAAP;AACA;AAED,IANe,CAAhB;;AAQA,UAAO;AACN,oBAAgB,UAAU,MADpB;AAEN,iBAAa;AAFP,IAAP;AAKA;;;;;;;;;;8BAQW,Q,EAAU;;AAErB,OAAI,OAAO,IAAX;;AAEA,OAAI,iBAAiB,KAAK,mBAAL,CAAyB,SAAS,MAAT,CAAgB,MAAzC,CAArB;;AAEA,OAAI,eAAe,UAAf,KAA8B,IAAlC,EAAwC;AACvC,UAAM,6BAAN;AACA;;AAED,QAAK,aAAL,CAAmB,IAAnB,CAAwB,QAAxB;;;AAGA,QAAK,YAAL,CAAkB,IAAlB,CAAuB,KAAK,SAAL,CAAe,MAAf,CAAsB,aAA7C,EAA4D,QAA5D;AAEA;;;;;;;;;;sCASmB,M,EAAQ,O,EAAS;;AAEpC,OAAI,OAAO,IAAX;;AAEA,OAAI,YAAY,SAAZ,IACF,YAAY,IADd,EACoB;AACnB,cAAU,EAAV;AACA;;AAED,OAAI,QAAQ,gBAAR,KAA6B,SAAjC,EAA6C;AAC5C,WAAO,QAAQ,gBAAf;AACA;;AAED,OAAI,WAAW,IAAI,WAAJ,CAAgB,MAAhB,CAAf;;AAEA,OAAI;AACH,SAAK,WAAL,CAAiB,QAAjB;AACA,IAFD,CAEE,OAAO,CAAP,EAAU;;AAEX,UAAM,0BAA0B,CAAhC;AACA;AAED;;;;;;;;yCAOsB,M,EAAQ;;AAE9B,OAAI,QAAQ,IAAZ;;;AAGA,OAAI,kBAAkB,MAAM,kBAAN,CAAyB,MAAzB,CAAtB;;AAEA,OAAI,gBAAgB,SAAhB,KAA8B,IAAlC,EAAwC;;;AAGvC,oBAAgB,SAAhB,CAA0B,CAA1B,EAA6B,MAA7B,CAAoC,cAApC,CAAmD,IAAnD,CAAwD,MAAM,SAAN,CAAgB,QAAhB,CAAyB,gBAAjF;AAEA,IALD,MAKO;AACN,YAAQ,GAAR,CAAY,wBAAZ,E;AACA;AAED;;;;EAnI2C,gB;;;;;;;;;;IA8IvC,iB;;;AAEL,4BAAY,MAAZ,EAAoB;AAAA;;AAAA,oGAEb,MAFa;;AAInB,MAAI,cAAJ;;AAEA,QAAM,YAAN,GAAqB,IAArB;AACA,QAAM,iBAAN,GAA0B,IAA1B;;AAPmB;AASnB;;;;+BAGY;;AAEZ;;AAEA,OAAI,QAAQ,IAAZ;AACA,OAAI,SAAS,MAAM,MAAnB;;AAGA,OAAI,OAAO,YAAP,KAAwB,SAAxB,IACF,OAAO,YAAP,KAAwB,IAD1B,EACgC;AAC/B,UAAM,4BAAN;AACA;;AAED,SAAM,YAAN,GAAqB,OAAO,YAA5B;;AAEA,OAAI;AACH,UAAM,WAAN;AACA,IAFD,CAEE,OAAO,CAAP,EAAU;;AAEX,UAAM,8BAA8B,CAApC;AACA;;AAED,OAAI;AACH,UAAM,aAAN;AACA,IAFD,CAEE,OAAO,CAAP,EAAU;;AAEX,UAAM,gCAAgC,CAAtC;AACA;;AAED,OAAI;AACH,UAAM,eAAN;AACA,IAFD,CAEE,OAAO,CAAP,EAAU;;AAEX,UAAM,kCAAkC,CAAxC;AACA;;;AAID;;;;;;;;gCAMa;;AAEb,OAAI,QAAQ,IAAZ;AACA,OAAI,SAAS,MAAM,MAAnB;AACA,OAAI,eAAe,MAAM,YAAzB;AAIA;;;;;;;;kCAMe;;AAEf,OAAI,QAAQ,IAAZ;AACA,OAAI,SAAS,MAAM,MAAnB;;AAGA,SAAM,cAAN,GAAuB,IAAI,4BAAJ,EAAvB;;AAGA,SAAM,eAAN,GAAwB,IAAI,4BAAJ,CACtB,MAAM,cADgB,EAEtB,MAAM,cAFgB,EAGtB,MAAM,YAHgB,CAAxB;;AAMA,OAAI;AACH,UAAM,eAAN,CAAsB,UAAtB;AACA,IAFD,CAEE,OAAO,CAAP,EAAU;;AAEX,UAAM,yCAAyC,CAA/C;AACA;AAED;;;;;;;;oCAMiB;;AAEjB,OAAI,QAAQ,IAAZ;AACA,OAAI,SAAS,MAAM,MAAnB;;AAGA,SAAM,gBAAN,GAAyB,IAAI,8BAAJ,EAAzB;;AAEA,SAAM,iBAAN,GAA0B,IAAI,8BAAJ,CACxB,MAAM,gBADkB,EAExB,MAAM,cAFkB,EAGxB,MAAM,YAHkB,CAA1B;;AAMA,OAAI;AACH,UAAM,iBAAN,CAAwB,UAAxB;AACA,IAFD,CAEE,OAAO,CAAP,EAAU;;AAEX,UAAM,2CAA2C,CAAjD;AACA;AAED;;;;;;;;;;iCAQc;;AAEd,OAAI,QAAQ,IAAZ;AACA,OAAI,mBAAmB,MAAM,iBAA7B;;AAEA,OAAI,qBAAqB,IAAzB,EAA+B;;AAE9B,QAAI,mBAAmB,QAAQ,kCAAR,CAAvB;;AAEA,uBAAmB,IAAI,gBAAJ,CAAqB,MAAM,cAA3B,EAA2C,MAAM,gBAAjD,CAAnB;;AAEA,qBAAiB,UAAjB;AACA,qBAAiB,gBAAjB;AAEA;;AAED,UAAO,gBAAP;AAEA;;;;EAnJ8B,a;;AA2JhC,IAAI,OAAO;AACT,sBAAsB;AADb,CAAX;;AAKA,OAAO,OAAP,GAAiB,IAAjB","file":"stEngines/enginesSYS_Hero/ngsysHero_Server.js","sourcesContent":["\"use strict\";\r\n\r\n/*\r\n SomeThings Engines System library\r\n \r\n version Hero\r\n for Server\r\n\r\n*/\r\n\r\nlet Sensor = require('../Sensor.js');\r\nlet SensorEngine = require('../SensorEngine.js');\r\n\r\nlet SensorsManager_CONSTANTS = require('../services/SensorsManager.js').CONSTANTS;\r\nlet SensorsManager = require('../services/SensorsManager.js').SensorsManager;\r\nlet NGSYS_Hero_Server_SensorsSRV = require('./ngsysHero_ServerSensorsSRV.js').NGSYS_Hero_Server_SensorsSRV;\r\n\r\n\r\nlet Actuator = require('../Actuator.js');\r\nlet ActuatorEngine = require('../ActuatorEngine.js');\r\n\r\nlet ActuatorsManager_CONSTANTS = require('../services/ActuatorsManager.js').CONSTANTS;\r\nlet ActuatorsManager = require('../services/ActuatorsManager.js').ActuatorsManager;\r\nlet NGSYS_Hero_Server_ActuatorsSRV = require('./ngsysHero_ServerActuatorsSRV.js').NGSYS_Hero_Server_ActuatorsSRV;\r\n\r\n\r\nlet NGSystem_Hero_Lib = require('./enginesSYS_Hero.js');\r\nlet NGSystem_Hero_CONSTANTS = NGSystem_Hero_Lib.NGSystem_Hero_CONSTANTS;\r\nlet NGSystem_Hero = NGSystem_Hero_Lib.NGSystem_Hero;\r\n\r\n\r\n\r\n/**\r\n * SnsEngineRef\r\n * \r\n * Sensor Engine\r\n * for role Server\r\n */\r\nclass SnsEngineRef extends SensorEngine {\r\n\t\r\n\tconstructor(config) {\r\n\t\t\r\n\t\tsuper(config);\r\n\t}\r\n\t\r\n\tinitialize() {\r\n\t\t// Overrides parent method...\r\n\t}\r\n\t\r\n\tmainLoop() {\r\n\t\t// Overrides parent method...\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n/**\r\n * SensorRef\r\n * \r\n * Sensor\r\n * for role Server\r\n */\r\nclass SensorRef extends Sensor {\r\n\t\r\n\tconstructor(config) {\r\n\t\t\r\n\t\tsuper(config);\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tinitialize() {\r\n\t\t\r\n\t\tlet sensor = this;\r\n\t\t\r\n\t\t// initialize sensor engine\r\n\t\tsensor.sensorEngine = new SnsEngineRef( sensor.config.sensorEngine );\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Start sensor\r\n\t */\r\n\tstart() {\r\n\r\n\t\tlet stSensor = this;\r\n\r\n\t\treturn new Promise(function(resolve, reject) {\r\n\r\n\t\t\tlet request = {\r\n\t\t\t\t\"sensorID\" : stSensor.config.sensorID,\r\n\t\t\t\t\"result\" : null\r\n\r\n\t\t\t};\r\n\r\n\t\t\t// Emit message StartSensor\r\n\t\t\tstSensor.config._controlSocket.emit(SensorsManager_CONSTANTS.Messages.StartSensor , request);\r\n\r\n\t\t\tresolve(request);\r\n\r\n\t\t});\r\n\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Stop sensor\r\n\t */\r\n\tstop() {\r\n\r\n\t\tlet stSensor = this;\r\n\r\n\t\treturn new Promise(function(resolve, reject) {\r\n\r\n\t\t\tlet request = {\r\n\t\t\t\t\"sensorID\" : stSensor.config.sensorID,\r\n\t\t\t\t\"result\" : null\r\n\r\n\t\t\t};\r\n\r\n\t\t\t// Emit message StopSensor\r\n\t\t\tstSensor.config._controlSocket.emit(SensorsManager_CONSTANTS.Messages.StopSensor , request);\r\n\t\t\tresolve(request);\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Set sensor options\r\n\t */\r\n\tsetOptions(options){\r\n\t\t\r\n\t\tlet stSensor = this;\r\n\t\tlet socket = stSensor.socket;\r\n\t\t\r\n\t\tconsole.log('<*> ST SensorRef.setOptions');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(options);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t// Emit message setSensorOptions\r\n\t\tsocket.emit(SensorsManager_CONSTANTS.Messages.setSensorOptions,\r\n\t\t\t\t{\"sensorID\" : stSensor.config.sensorID, \"options\" : options});\r\n\r\n\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n/**\r\n * NGSYS_Hero_Server_SensorsMNG\r\n * \r\n * Sensors manager\r\n * for role Server\r\n */\r\nclass NGSYS_Hero_Server_SensorsMNG extends SensorsManager {\r\n\t\r\n\t\r\n\tconstructor() {\r\n\t\t\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Returns Sensor searched by sysID\r\n\t */\r\n\tgetSensorBy_sysID(sensorID) {\r\n\r\n\t\tlet smngr = this;\r\n\r\n\t\tlet sensor = null;\r\n\t\tlet _i = 0;\r\n\r\n\r\n\t\t_i = smngr.sensorsList.map(function(x) {return x.config._sysID; }).indexOf(sensorID);\r\n\t\tif (_i !== -1) {\r\n\t\t\tsensor = smngr.sensorsList[_i];\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\t\"stSensor\": sensor,\r\n\t\t\t\"position\": _i\r\n\t\t};\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Returns Sensors searched by nodeID\r\n\t * @param nodeID \r\n\t */\r\n\tgetSensorsByNode(nodeID) {\r\n\r\n\t\tlet smngr = this;\r\n\t\t\r\n\t\tlet sensors = smngr.sensorsList.filter(function(sensor, _i, _sensors) {\r\n\r\n\t\t\tif (sensor.config._refSTNodeID === nodeID) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\t\"numSensors\": sensors.length,\r\n\t\t\t\"sensors\": sensors\r\n\t\t};\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Add sensor\r\n\t * \r\n\t * @param sensor SensorRef object\r\n\t */\r\n\taddSensor(sensor) {\r\n\t\t\r\n\t\tlet smng = this;\r\n\t\t\r\n\t\tlet sensorSearch = smng.getSensorBy_sysID(sensor.config._sysID);\r\n\t\t\r\n\t\tif (sensorSearch.STsensor !== null) {\r\n\t\t\tthrow \"Sensor ID already exists.\";\r\n\t\t}\r\n\t\t\r\n\t\tsmng.sensorsList.push(sensor);\r\n\t\t\r\n\t\t// Emit message SensorAdded\r\n\t\tsmng.eventEmitter.emit(smng.CONSTANTS.Events.SensorAdded, sensor);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Add sensor from node\r\n\t * \r\n\t * @param config Configuration object\r\n\t */\r\n\taddSensorFromNode(config, options) {\r\n\t\t\r\n\t\tlet smng = this;\r\n\t\t\r\n\t\tif (options === undefined ||\r\n\t\t\t\toptions === null) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\r\n\t\tif (options.sensorsManager !== undefined ) {\r\n\t\t\tsmng = options.sensorsManager;\r\n\t\t}\r\n\t\t\r\n\t\tlet sensor = new SensorRef(config);\r\n\t\t\r\n\t\ttry {\r\n\t\t\tsmng.addSensor(sensor);\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tthrow \"Cannot add sensor. \" + e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Turn off sensors of node\r\n\t */\r\n\tturnOffSensorsOfNode(nodeID) {\r\n\t\t\r\n\t\tlet smng = this;\r\n//\t\tlet _nodeID = nodeID;\r\n\t\t\r\n\r\n\t\tlet sensorsSearch = smng.getSensorsByNode(nodeID);\r\n\t\t\r\n\t\tif (sensorsSearch.sensors !== null) {\r\n\t\t\t\r\n\t\t\t// Emit message TurnOffSensors\r\n\t\t\tsensorsSearch.sensors[0].config._controlSocket.emit(smng.CONSTANTS.Messages.TurnOffSensors);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tconsole.log(' <~> Node not found!!!');\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n/**\r\n * ActEngineRef\r\n * \r\n * Actuator Engine\r\n * for role Server\r\n */\r\nclass ActEngineRef extends ActuatorEngine {\r\n\t\r\n\tconstructor(config) {\r\n\t\t\r\n\t\tsuper(config);\r\n\t}\r\n\t\r\n\tinitialize() {\r\n\t\t// Overrides parent method...\r\n\t}\r\n\t\r\n\tmainLoop() {\r\n\t\t// Overrides parent method...\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n/**\r\n * ActuatorRef\r\n * \r\n * Actuator\r\n * for role Server\r\n */\r\nclass ActuatorRef extends Actuator {\r\n\t\r\n\tconstructor(config) {\r\n\t\t\r\n\t\tsuper(config);\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\tinitialize() {\r\n\t\t\r\n\t\tlet actuator = this;\r\n\t\t\r\n\t\t// initialize actuator engine\r\n\t\tactuator.actuatorEngine = new ActEngineRef( actuator.config.actuatorEngine );\r\n\t}\r\n\t\r\n\r\n\t/**\r\n\t * Start actuator\r\n\t */\r\n\tstart() {\r\n\r\n\t\tlet stActuator = this;\r\n\r\n\t\treturn new Promise(function(resolve, reject) {\r\n\r\n\t\t\tlet request = {\r\n\t\t\t\t\"actuatorID\" : stActuator.config.actuatorID,\r\n\t\t\t\t\"result\" : null\r\n\r\n\t\t\t};\r\n\r\n\t\t\t// Emit message StartActuator\r\n\t\t\tstActuator.config._controlSocket.emit(ActuatorsManager_CONSTANTS.Messages.StartActuator , request);\r\n\r\n\t\t\tresolve(request);\r\n\r\n\t\t});\r\n\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Stop actuator\r\n\t */\r\n\tstop() {\r\n\r\n\t\tlet stActuator = this;\r\n\r\n\t\treturn new Promise(function(resolve, reject) {\r\n\r\n\t\t\tlet request = {\r\n\t\t\t\t\"actuatorID\" : stActuator.config.actuatorID,\r\n\t\t\t\t\"result\" : null\r\n\r\n\t\t\t};\r\n\r\n\t\t\t// Emit message StopActuator\r\n\t\t\tstActuator.config._controlSocket.emit(ActuatorsManager_CONSTANTS.Messages.StopActuator , request);\r\n\t\t\tresolve(request);\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Set actuator options\r\n\t */\r\n\tsetOptions(options){\r\n\t\t\r\n\t\tlet stActuator = this;\r\n\t\tlet socket = stActuator.config._controlSocket;\r\n\t\t\r\n\t\tconsole.log('<*> ST ActuatorRef.setOptions');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(options);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t// Emit message setActuatorOptions\r\n\t\tsocket.emit(ActuatorsManager_CONSTANTS.Messages.setActuatorOptions,\r\n\t\t\t\t{\"actuatorID\" : stActuator.config.actuatorID, \"options\" : options});\r\n\r\n\r\n\t\t\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * NGSYS_Hero_Server_ActuatorsMNG\r\n * \r\n * Actuators manager\r\n * for role Server\r\n */\r\nclass NGSYS_Hero_Server_ActuatorsMNG extends ActuatorsManager {\r\n\t\r\n\t\r\n\tconstructor() {\r\n\t\t\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Returns Actuator searched by sysID\r\n\t */\r\n\tgetActuatorBy_sysID(actuatorID) {\r\n\r\n\t\tlet amng = this;\r\n\r\n\t\tlet actuator = null;\r\n\t\tlet _i = 0;\r\n\r\n\r\n\t\t_i = amng.actuatorsList.map(function(x) {return x.config._sysID; }).indexOf(actuatorID);\r\n\t\tif (_i !== -1) {\r\n\t\t\tactuator = amng.actuatorsList[_i];\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\t\"stActuator\": actuator,\r\n\t\t\t\"position\": _i\r\n\t\t};\r\n\t\t\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Returns Actuators searched by nodeID\r\n\t * @param nodeID \r\n\t */\r\n\tgetActuatorsByNode(nodeID) {\r\n\r\n\t\tlet smngr = this;\r\n\t\t\r\n\t\tlet actuators = smngr.actuatorsList.filter(function(actuator, _i, _actuators) {\r\n\r\n\t\t\tif (actuator.config._refSTNodeID === nodeID) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\t\"numActuators\": actuators.length,\r\n\t\t\t\"actuators\": actuators\r\n\t\t};\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Add actuator\r\n\t * \r\n\t * @param actuator ActuatorRef object\r\n\t */\r\n\taddActuator(actuator) {\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\t\r\n\t\tlet actuatorSearch = amng.getActuatorBy_sysID(actuator.config._sysID);\r\n\t\t\r\n\t\tif (actuatorSearch.STactuator !== null) {\r\n\t\t\tthrow \"Actuator ID already exists.\";\r\n\t\t}\r\n\t\t\r\n\t\tamng.actuatorsList.push(actuator);\r\n\t\t\r\n\t\t// Emit message ActuatorAdded\r\n\t\tamng.eventEmitter.emit(amng.CONSTANTS.Events.ActuatorAdded, actuator);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Add actuator from node\r\n\t * \r\n\t * @param config Configuration object\r\n\t */\r\n\taddActuatorFromNode(config, options) {\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\t\r\n\t\tif (options === undefined ||\r\n\t\t\t\toptions === null) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\r\n\t\tif (options.actuatorsManager !== undefined ) {\r\n\t\t\tamng = options.actuatorsManager;\r\n\t\t}\r\n\t\t\r\n\t\tlet actuator = new ActuatorRef(config);\r\n\t\t\r\n\t\ttry {\r\n\t\t\tamng.addActuator(actuator);\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tthrow \"Cannot add actuator. \" + e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t/**\r\n\t * Turn off actuators of node\r\n\t */\r\n\tturnOffActuatorsOfNode(nodeID) {\r\n\t\t\r\n\t\tlet amngr = this;\r\n//\t\tlet _nodeID = nodeID;\r\n\t\t\r\n\t\tlet actuatorsSearch = amngr.getActuatorsByNode(nodeID);\r\n\t\t\r\n\t\tif (actuatorsSearch.actuators !== null) {\r\n\t\t\t\r\n\t\t\t// Emit message TurnOffActuators\r\n\t\t\tactuatorsSearch.actuators[0].config._controlSocket.emit(amngr.CONSTANTS.Messages.TurnOffActuators);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tconsole.log(' <~> Node not found!!!');\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n/**\r\n * NGSYS_Hero_Server\r\n * \r\n * Engine system\r\n * for role Server\r\n */\r\nclass NGSYS_Hero_Server extends NGSystem_Hero {\r\n\t\r\n\tconstructor(config) {\r\n\t\t\r\n\t\tsuper(config);\r\n\t\t\r\n\t\tlet ngSYS = this;\r\n\t\t\r\n\t\tngSYS.nodesManager = null;\r\n\t\tngSYS._scs_RouteEngines = null;\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\tinitialize() {\r\n\t\t\r\n\t\tsuper.initialize();\r\n\t\t\r\n\t\tlet ngSYS = this;\r\n\t\tlet config = ngSYS.config;\r\n\t\t\r\n\t\t\r\n\t\tif (config.nodesManager === undefined ||\r\n\t\t\t\tconfig.nodesManager === null) {\r\n\t\t\tthrow \"Nodes manager is required.\";\r\n\t\t}\r\n\t\t\r\n\t\tngSYS.nodesManager = config.nodesManager;\r\n\t\t\r\n\t\ttry {\r\n\t\t\tngSYS._init_Nodes();\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tthrow \"Cannot initialize Nodes. \" + e;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tngSYS._init_Sensors();\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tthrow \"Cannot initialize Sensors. \" + e;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tngSYS._init_Actuators();\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tthrow \"Cannot initialize Actuators. \" + e;\r\n\t\t}\r\n\t\t\r\n//\t\tcomSYS._service = new COMSys_Morse_Srv_Node(comSYS);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize nodes\r\n\t */\r\n\t_init_Nodes() {\r\n\t\t\r\n\t\tlet ngSYS = this;\r\n\t\tlet config = ngSYS.config;\r\n\t\tlet nodesManager = ngSYS.nodesManager;\r\n\t\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize sensors\r\n\t */\r\n\t_init_Sensors() {\r\n\t\t\r\n\t\tlet ngSYS = this;\r\n\t\tlet config = ngSYS.config;\r\n\t\t\r\n\t\t\r\n\t\tngSYS.sensorsManager = new NGSYS_Hero_Server_SensorsMNG();\r\n\t\t\r\n\t\t\r\n\t\tngSYS.sensorsServices = new NGSYS_Hero_Server_SensorsSRV(\r\n\t\t\t\tngSYS.sensorsManager, \r\n\t\t\t\tngSYS.controlChannel,\r\n\t\t\t\tngSYS.nodesManager\r\n\t\t\t\t);\r\n\t\t\r\n\t\ttry {\r\n\t\t\tngSYS.sensorsServices.initialize();\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tthrow \"Cannot initialize sensors services. \" + e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize actuators\r\n\t */\r\n\t_init_Actuators() {\r\n\t\t\r\n\t\tlet ngSYS = this;\r\n\t\tlet config = ngSYS.config;\r\n\t\t\r\n\t\t\r\n\t\tngSYS.actuatorsManager = new NGSYS_Hero_Server_ActuatorsMNG();\r\n\t\t\r\n\t\tngSYS.actuatorsServices = new NGSYS_Hero_Server_ActuatorsSRV(\r\n\t\t\t\tngSYS.actuatorsManager, \r\n\t\t\t\tngSYS.controlChannel,\r\n\t\t\t\tngSYS.nodesManager\r\n\t\t\t\t);\r\n\t\t\r\n\t\ttry {\r\n\t\t\tngSYS.actuatorsServices.initialize();\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tthrow \"Cannot initialize actuators services. \" + e;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get Server Control Services routes\r\n\t * for engines\r\n\t * \r\n\t */\r\n\tgetSCSRoutes() {\r\n\t\t\r\n\t\tlet ngSYS = this;\r\n\t\tlet scs_RouteEngines = ngSYS._scs_RouteEngines;\r\n\t\t\r\n\t\tif (scs_RouteEngines === null) {\r\n\t\t\t\r\n\t\t\tlet SCS_RouteEngines = require('./scs_routes/SCS_RouteEngines.js');\r\n\t\t\r\n\t\t\tscs_RouteEngines = new SCS_RouteEngines(ngSYS.sensorsManager, ngSYS.actuatorsManager);\r\n\t\t\t\r\n\t\t\tscs_RouteEngines.initialize();\r\n\t\t\tscs_RouteEngines.mapServiceRoutes();\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\treturn scs_RouteEngines;\r\n\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\nlet _Lib = {\r\n\t\t\"NGSYS_Hero_Server\" : NGSYS_Hero_Server\r\n};\r\n\r\n\r\nmodule.exports = _Lib;\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STEngines\\es6"}