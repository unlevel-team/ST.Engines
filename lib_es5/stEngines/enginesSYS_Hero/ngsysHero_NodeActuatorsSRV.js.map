{"version":3,"sources":["stEngines/enginesSYS_Hero/ngsysHero_NodeActuatorsSRV.js"],"names":[],"mappings":"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","file":"stEngines/enginesSYS_Hero/ngsysHero_NodeActuatorsSRV.js","sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * Actuators services\r\n * for Node role\r\n * \r\n * SomeThings Engines System library\r\n * version Hero\r\n * \r\n */\r\n\r\n/**\r\n * Import ActuatorsServices\r\n * @ignore\r\n */\r\nlet ActuatorsServices = require('../services/ActuatorsServices.js').ActuatorsServices;\r\n\r\n\r\n/**\r\n * Actuators Services\r\n * \r\n * <pre>\r\n * for role Node\r\n * \r\n * version Hero\r\n * \r\n * </pre>\r\n * \r\n * @class\r\n * @memberof st.ngn.ngnSYS_Hero\r\n * @implements st.ngn.services.ActuatorsServices\r\n * \r\n */\r\nclass NGSYS_Hero_Node_ActuatorsSRV extends ActuatorsServices {\r\n\t\r\n\t/**\r\n\t * @constructs NGSYS_Hero_Node_ActuatorsSRV\r\n\t * \r\n\t * @param {st.ngn.services.ActuatorsManager} actuatorsManager - Actuators manager object\r\n\t * @param {object} controlChannel - Control channel object\r\n\t * \r\n\t */\r\n\tconstructor(actuatorsManager, controlChannel) {\r\n\t\t\r\n\t\tsuper(actuatorsManager, controlChannel);\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Map control events\r\n\t * \r\n\t * @param {st.ngn.services.ActuatorsManager} actuatorsManager - Actuators manager object\r\n\t */\r\n\t_mapControlEvents(actuatorsManager) {\r\n\t\t\r\n\t\tlet service = this;\r\n\t\t\r\n\t\tif (actuatorsManager === undefined) {\r\n\t\t\tactuatorsManager = service.actuatorsManager;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tactuatorsManager.actuatorsList.forEach(function(actuator, _i) {\r\n\t\t\tservice._mapActuatorControlEvents(actuator);\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Map control events for actuators\r\n\t * \r\n\t * @param {st.ngn.Actuator} actuator \r\n\t */\r\n\t_mapActuatorControlEvents(actuator) {\r\n\t\t\r\n\t\tlet service = this;\r\n\t\t\r\n\t\tlet actuatorEngine = actuator.actuatorEngine;\r\n\t\t\r\n\t\t\r\n\t\t// console.log('<*> NGSYS_Hero_Node._mapActuatorControlEvents');\t// TODO REMOVE DEBUG LOG\r\n\t\t// console.log(actuator.config);\r\n\t\t\r\n\t\t\r\n\t\t// Map event ActuatorOptionsUpdated\r\n\t\tactuator.eventEmitter.on(actuator.CONSTANTS.Events.ActuatorOptionsUpdated, \r\n\t\t\t\t\r\n\t\t\t\tfunction(data) {\r\n\t\t\t\t\tservice._event_ActuatorOptionsUpdated(data,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"service\" : service\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t);\r\n\t\t\r\n\t\tif (actuatorEngine !== null) {\r\n\t\t\t\r\n\t\t\t// Map event ActuatorEngine_Start\r\n\t\t\tactuatorEngine.eventEmitter.on(\r\n\t\t\t\t\tactuatorEngine.CONSTANTS.Events.Engine_Start, \r\n\t\t\t\t\tfunction(data){\r\n\t\t\t\t\t\tservice._event_ActuatorEngine_Start({\r\n\t\t\t\t\t\t\t\"data\": data,\r\n\t\t\t\t\t\t\t\"actuator\": actuator\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\t// Map event ActuatorEngine_Stop\r\n\t\t\tactuatorEngine.eventEmitter.on(\r\n\t\t\t\t\tactuatorEngine.CONSTANTS.Events.Engine_Stop, \r\n\t\t\t\t\tfunction(data){\r\n\t\t\t\t\t\tservice._event_ActuatorEngine_Stop({\r\n\t\t\t\t\t\t\t\"data\": data,\r\n\t\t\t\t\t\t\t\"actuator\": actuator\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Map control messages\r\n\t * \r\n\t * @param {object} socket - Socket object\r\n\t * @param {object} options - Options object\r\n\t * @param {st.ngn.ngnSYS_Hero.NGSYS_Hero_Node_ActuatorsSRV} [options.service] - Actuators Service object\r\n\t * \r\n\t */\r\n\t_mapControlMessages(socket, options) {\r\n\t\t\r\n\t\tsuper._mapControlMessages(socket, options);\r\n\t\t\r\n\t\tlet _service = this;\r\n\t\tif (options.service !== undefined) {\r\n\t\t\t_service = options.service;\r\n\t\t}\r\n\t\t\r\n\t\tlet _amng = _service.actuatorsManager;\r\n\t\t\r\n\t\t\r\n\t\t// Map message getActuatorsList\r\n\t\tsocket.on(_service.CONSTANTS.Messages.getActuatorsList, \r\n\t\t\t\t\r\n\t\t\tfunction(_msg) {\r\n\t\t\t\t_service._msg_getActuatorsList({\r\n\t\t\t\t\t'msg': _msg,\r\n\t\t\t\t\t'service': _service\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\t// Map message getActuatorOptions\r\n\t\tsocket.on(_service.CONSTANTS.Messages.getActuatorOptions, \r\n\t\t\t\t\r\n\t\t\tfunction(_msg) {\r\n\t\t\t\t_service._msg_getActuatorOptions({\r\n\t\t\t\t\t'msg': _msg,\r\n\t\t\t\t\t'service': _service\r\n\t\t\t\t});\r\n\t\t\t}\t\t\t\t\r\n\t\t);\r\n\t\t\r\n\t\t// Map message setActuatorOptions\r\n\t\tsocket.on(_service.CONSTANTS.Messages.setActuatorOptions, \r\n\t\t\t\t\r\n\t\t\tfunction(_msg) {\r\n\t\t\t\t_service._msg_setActuatorOptions({\r\n\t\t\t\t\t'msg': _msg,\r\n\t\t\t\t\t'service': _service\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\t// Map message StartActuator\r\n\t\tsocket.on(_service.CONSTANTS.Messages.StartActuator, \r\n\t\t\t\r\n\t\t\tfunction(_msg) {\r\n\t\t\t\t_service._msg_StartActuator({\r\n\t\t\t\t\t'msg': _msg,\r\n\t\t\t\t\t'service': _service\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\t// Map message StopActuator\r\n\t\tsocket.on(_service.CONSTANTS.Messages.StopActuator, \r\n\t\t\t\r\n\t\t\tfunction(_msg) {\r\n\t\t\t\t_service._msg_StopActuator({\r\n\t\t\t\t\t'msg': _msg,\r\n\t\t\t\t\t'service': _service\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\t// Map message TurnOffActuators\r\n\t\tsocket.on(_service.CONSTANTS.Messages.TurnOffActuators, \r\n\t\t\t\t\r\n\t\t\tfunction(_msg) {\r\n\t\t\t\t_service._msg_TurnOffActuators({\r\n\t\t\t\t\t'msg': _msg,\r\n\t\t\t\t\t'service': _service\r\n\t\t\t\t});\r\n\t\t\t}\t\r\n\t\t);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Unmap control messages\r\n\t * \r\n\t * @param {object} socket - Socket object\r\n\t * @param {object} options - Options object\r\n\t * @param {st.ngn.ngnSYS_Hero.NGSYS_Hero_Node_ActuatorsSRV} [options.service] - Actuators Service object\r\n\t *\r\n\t */\r\n\t_unmapControlMessages(socket, options) {\r\n\t\t\r\n\t\tsuper._unmapControlMessages(socket, options);\r\n\t\t\r\n\t\tlet service = this;\r\n\t\tif (options.service !== undefined) {\r\n\t\t\tservice = options.service;\r\n\t\t}\r\n\t\t\r\n//\t\tsocket.removeListener(service.CONSTANTS.Messages.getActuatorsList, service._msg_getActuatorsList);\r\n//\t\tsocket.removeListener(service.CONSTANTS.Messages.getActuatorOptions, service._msg_getActuatorOptions);\r\n//\t\tsocket.removeListener(service.CONSTANTS.Messages.setActuatorOptions, service._msg_setActuatorOptions);\r\n//\t\tsocket.removeListener(service.CONSTANTS.Messages.StartActuator, service._msg_StartActuator);\r\n//\t\tsocket.removeListener(service.CONSTANTS.Messages.StopActuator, service._msg_StopActuator);\r\n//\t\tsocket.removeListener(service.CONSTANTS.Messages.TurnOffActuators, service._msg_TurnOffActuators);\r\n\r\n\t\t\r\n\t\tsocket.removeAllListeners(service.CONSTANTS.Messages.getActuatorsList);\r\n\t\tsocket.removeAllListeners(service.CONSTANTS.Messages.getActuatorOptions);\r\n\t\tsocket.removeAllListeners(service.CONSTANTS.Messages.setActuatorOptions);\r\n\t\tsocket.removeAllListeners(service.CONSTANTS.Messages.StartActuator);\r\n\t\tsocket.removeAllListeners(service.CONSTANTS.Messages.StopActuator);\r\n\t\tsocket.removeAllListeners(service.CONSTANTS.Messages.TurnOffActuators);\r\n\r\n\t\t\r\n\t\tservice._mapped = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Event ActuatorOptionsUpdated\r\n\t * \t\r\n\t * @param {object} data - Data object\r\n\t * @param {object} options - Options object\r\n\t * @param {st.ngn.ngnSYS_Hero.NGSYS_Hero_Node_ActuatorsSRV} [options.service] - Actuators Service object\r\n\t * \r\n\t */\r\n\t_event_ActuatorOptionsUpdated(data, options) {\r\n\t\t\r\n\t\tlet service = this;\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tif (options.service !== undefined) {\r\n\t\t\tservice = options.service;\r\n\t\t}\r\n\t\t\r\n\t\tlet socket = service.controlChannel.socket;\r\n\t\t\r\n\t\tlet actuator = data.actuator;\r\n\t\t\r\n\t\t// Emit message ActuatorOptionsUpdated\r\n\t\tsocket.emit(service.CONSTANTS.Messages.ActuatorOptionsUpdated, {\r\n\t\t\t\"actuatorID\": actuator.config.id\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Event ActuatorEngine_Start\r\n\t * \r\n\t * @param {object} data - Data object\r\n\t * \r\n\t */\r\n\t_event_ActuatorEngine_Start(data) {\r\n\t\t\r\n\t\tlet service = this;\r\n\t\tlet socket = service.controlChannel.socket;\r\n\t\t\r\n\t\tlet actuator = data.actuator;\r\n\t\t\r\n\t\t// Emit message ActuatorStarted\r\n\t\tsocket.emit(service.CONSTANTS.Messages.ActuatorStarted, {\r\n\t\t\t\"actuatorID\": actuator.config.id\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Event ActuatorEngine_Stop\r\n\t * \r\n\t * @param {object} data - Data object\r\n\t * \r\n\t */\r\n\t_event_ActuatorEngine_Stop(data) {\r\n\t\t\r\n\t\tlet service = this;\r\n\t\tlet socket = service.controlChannel.socket;\r\n\t\t\r\n\t\tlet actuator = data.actuator;\r\n\t\t\r\n\t\t// Emit message ActuatorStarted\r\n\t\tsocket.emit(service.CONSTANTS.Messages.ActuatorStopped, {\r\n\t\t\t\"actuatorID\": actuator.config.id\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message getActuatorsList\r\n\t */\r\n\t_msg_getActuatorsList(options) {\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tlet _service = this;\r\n\t\tif (options.service !== undefined) {\r\n\t\t\t_service  = options.service;\r\n\t\t}\r\n\t\t\r\n\t\tlet _msg = options.msg;\r\n\t\t\r\n\t\tlet _amng = _service.actuatorsManager;\r\n\t\tlet _socket = _service.controlChannel.socket;\r\n\t\t\r\n\t\tconsole.log('<*> NGSYS_Hero_Node_ActuatorsSRV.Messages.getActuatorsList');\t// TODO REMOVE DEBUG LOG\r\n\t  \r\n\t\tlet _response = {};\r\n\t\t_response.numActuators = _amng.actuatorsList.length;\r\n\t\t_response.actuators = [];\r\n\t\t\r\n\t\t// Only for enabled\r\n\t\tlet _actuatorsEnabled = _amng.actuatorsList.filter(function(_actuator, _i) {\r\n\t\t\t\r\n\t\t\tif (_actuator.enabled === true) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn false;\r\n\t\t});\r\n\t  \r\n\t\t\r\n\t\t_actuatorsEnabled.forEach(function(_act, _i) {\r\n\t  \t\r\n\t\t\tlet _actuator = {\r\n\t\t\t\t\"actuatorID\" : _act.config.id,\r\n\t\t\t\t\"type\" : _act.config.type,\r\n\t\t\t\t\"engine\": \"not defined\",\r\n\t\t\t\t\"state\" : \"config\"\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif (_act.actuatorEngine !== null) {\r\n\t\t\t\tif (_act.actuatorEngine.name !== undefined) {\r\n\t\t\t\t\t_actuator.engine = _act.actuatorEngine.name;\r\n\t\t\t\t}\r\n\t\t\t\t_actuator.state = _act.actuatorEngine.state;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t_response.actuators.push( _actuator );\r\n\t\t});\r\n\t  \r\n\t  \r\n\t\t// Emit message ActuatorsList\r\n\t\t_socket.emit( _service.CONSTANTS.Messages.ActuatorsList, _response );\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message getActuatorOptions\r\n\t */\r\n\t_msg_getActuatorOptions(options) {\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tlet _service = this;\r\n\t\tif (options.service !== undefined) {\r\n\t\t\t_service  = options.service;\r\n\t\t}\r\n\t\t\r\n\t\tlet _msg = options.msg;\r\n\t\t\r\n\t\tlet _amng = _service.actuatorsManager;\r\n\t\tlet _socket = _service.controlChannel.socket;\r\n\t\t\r\n\t\tconsole.log('<*> NGSYS_Hero_Node_ActuatorsSRV.Messages.getActuatorOptions');\t// TODO REMOVE DEBUG LO\r\n\t\t  \r\n\t\tlet _actuatorID = _msg.actuatorID;\r\n\t\t  \r\n\t\tlet _response = {\r\n\t\t  \"actuatorID\" : _actuatorID\r\n\t\t};\r\n\t\t  \r\n\t\ttry {\r\n\t\t\t  \r\n\t\t\tlet _actuatorSearch = _amng.getActuatorByID(_actuatorID);\r\n\t\t\tif(_actuatorSearch.STactuator === null){\r\n\t\t\t\tthrow \"Actuator not found.\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet _actuator = _actuatorSearch.STactuator;\r\n\t\t\t  \r\n\t\t\t_response.options = _actuator.getOptions();\r\n\t\t\t \r\n\t\t\t// Emit message ActuatorOptions\r\n\t\t\t_socket.emit(_service.CONSTANTS.Messages.ActuatorOptions, _response);\r\n\t\r\n\t\t} catch (_e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\t_response.result = \"ERROR\";\r\n\t\t\t_response.error = _e;\r\n\r\n\t\t\tconsole.log('<EEE> NGSYS_Hero_Node_ActuatorsSRV.Messages.getActuatorOptions ERROR');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(_response);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message setActuatorOptions\r\n\t */\r\n\t_msg_setActuatorOptions(options) {\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tlet _service = this;\r\n\t\tif (options.service !== undefined) {\r\n\t\t\t_service  = options.service;\r\n\t\t}\r\n\t\t\r\n\t\tlet _msg = options.msg;\r\n\t\t\r\n\t\tlet _amng = _service.actuatorsManager;\r\n\t\t\t\r\n\t\tconsole.log('<*> NGSYS_Hero_Node_ActuatorsSRV.Messages.setActuatorOptions');\t// TODO REMOVE DEBUG LO\r\n\t\tconsole.log(_msg);\t// TODO REMOVE DEBUG LO\r\n\r\n\t\tlet _actuatorID = _msg.actuatorID;\r\n\t\tlet _options = _msg.options;\r\n\t\t  \r\n\t\tlet _response = {\r\n\t\t\t'actuatorID' : _actuatorID\r\n\t\t};\r\n\t\t  \r\n\t\ttry {\r\n\t\t \r\n\t\t\tlet _actuatorSearch = _amng.getActuatorByID(_actuatorID);\r\n\t\t\tif(_actuatorSearch.STactuator === null){\r\n\t\t\t\tthrow \"Actuator not found.\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet _actuator = _actuatorSearch.STactuator;\r\n\t\t\t\r\n\t\t\t_actuator.setOptions(_options);\r\n\t\t\t  \r\n\t\t} catch (_e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tresponse.result = \"ERROR\";\r\n\t\t\tresponse.error = _e;\r\n\r\n\t\t\tconsole.log('<EEE> NGSYS_Hero_Node_ActuatorsSRV.Messages.setActuatorOptions ERROR');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(_response);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message StartActuator\r\n\t */\r\n\t_msg_StartActuator(options) {\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tlet _service = this;\r\n\t\tif (options.service !== undefined) {\r\n\t\t\t_service  = options.service;\r\n\t\t}\r\n\t\t\r\n\t\tlet _msg = options.msg;\r\n\t\t\r\n\t\tlet _amng = _service.actuatorsManager;\r\n\r\n\t\t\r\n\t\tconsole.log('<*> NGSYS_Hero_Node_ActuatorsSRV.Messages.StartActuator');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(_msg);\t// TODO REMOVE DEBUG LOG\r\n//\t\t  console.log(' <~> ' + msg);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\tlet _response = {};\r\n\t\t_response.result = null;\r\n\t  \r\n\t\ttry {\r\n\t\t\r\n\t\t\tlet _actuatorSearch = _amng.getActuatorByID(_msg.actuatorID);\r\n\t\t  \r\n\t\t\tif (_actuatorSearch.STactuator !== null) {\r\n\t\t\t\t\r\n\t\t\t\t// _actuatorSearch.STactuator.actuatorEngine.startEngine();\r\n\r\n\t\t\t\t_actuatorSearch.STactuator.actuatorEngine.startEngine({\r\n\t\t\t\t\t'ngnInterface': _actuatorSearch.STactuator.actuatorEngine\r\n\t\t\t\t});\r\n\t\t\t\t \r\n\t\t\t} else {\r\n\t\t\t\tthrow \"Actuator not found.\";  \r\n\t\t\t}\r\n\r\n\t\t} catch (_e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tresponse.result = \"ERROR\";\r\n\t\t\tresponse.error = _e;\r\n\t\t\t\r\n\t\t\tconsole.log('<EEE> NGSYS_Hero_Node_ActuatorsSRV.Messages.StartActuator ERROR');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(_response);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n//\t\t\tmsg.result = response.result;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message StopActuator\r\n\t */\r\n\t_msg_StopActuator(options) {\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tlet _service = this;\r\n\t\tif (options.service !== undefined) {\r\n\t\t\t_service  = options.service;\r\n\t\t}\r\n\t\t\r\n\t\tlet _msg = options.msg;\r\n\t\t\r\n\t\tlet _amng = _service.actuatorsManager;\r\n\t\t\r\n\t\tconsole.log('<*> NGSYS_Hero_Node_ActuatorsSRV.Messages.StopActuator');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(_msg);\t// TODO REMOVE DEBUG LOG\r\n//\t\tconsole.log(' <~> ' + msg);\t// TODO REMOVE DEBUG LOG\r\n\t\t  \r\n\t\tlet _response = {};\r\n\t\t_response.result = null;\r\n\t\t  \r\n\t\ttry {\r\n\t\t\t\r\n\t\t  let _actuatorSearch = _amng.getActuatorByID(_msg.actuatorID);\r\n\t\t\t  \r\n\t\t  if (_actuatorSearch.STactuator !== null) {\r\n\t\t\t  \r\n\t\t\t  // _actuatorSearch.STactuator.actuatorEngine.stopEngine();\r\n\t\t\t  \r\n\t\t\t  _actuatorSearch.STactuator.actuatorEngine.stopEngine({\r\n\t\t\t\t  'ngnInterface': _actuatorSearch.STactuator.actuatorEngine\r\n\t\t\t  });\r\n\t\t\t  \r\n\t\t  } else {\r\n\t\t\tthrow \"Actuator not found.\";  \r\n\t\t  }\r\n\t\t  \r\n\t\t} catch (_e) {\r\n\t\t\t\r\n\t\t\t// TODO: handle exception\r\n\t\t\t_response.result = \"ERROR\";\r\n\t\t\t_response.error = _e;\r\n\t\t\tconsole.log('<EEE> NGSYS_Hero_Node_ActuatorsSRV.Messages.StopActuator ERROR');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(_response);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message TurnOffActuators\r\n\t */\r\n\t_msg_TurnOffActuators(options) {\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tlet _service = this;\r\n\t\tif (options.service !== undefined) {\r\n\t\t\t_service  = options.service;\r\n\t\t}\r\n\t\t\r\n\t\tlet _msg = options.msg;\r\n\t\t\r\n\t\tlet _amng = _service.actuatorsManager;\r\n\t\t\r\n\t\tconsole.log('<*> NGSYS_Hero_Node_ActuatorsSRV.Messages.TurnOffActuators');\t// TODO REMOVE DEBUG LOG\r\n\t  \r\n\t\tlet _response = {};\r\n\t\t_response.result = null;\r\n\t  \r\n\t\ttry {\r\n\t\t\r\n\t\t\t_amng.turnOffActuators();\r\n\r\n\t\t} catch (_e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\t_response.result = \"ERROR\";\r\n\t\t\t_response.error = _e;\r\n\r\n\t\t\tconsole.log('<EEE> NGSYS_Hero_Node_ActuatorsSRV.Messages.TurnOffActuators ERROR');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(_response);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n\r\nlet _Lib = {\r\n\t\t\"NGSYS_Hero_Node_ActuatorsSRV\" : NGSYS_Hero_Node_ActuatorsSRV\r\n\t};\r\n\r\n\r\nmodule.exports = _Lib;\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STEngines\\es6"}