{"version":3,"sources":["stEngines/enginesSYS_Hero/ngsysHero_NodeActuatorsSRV.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA,IAAI,oBAAoB,QAAQ,kCAAR,EAA4C,iBAApE;;;;;;;;;;;;;;;;;IAiBM,4B;;;;;;;;;;;AASL,uCAAY,gBAAZ,EAA8B,cAA9B,EAA8C;AAAA;;AAAA,yGAEvC,gBAFuC,EAErB,cAFqB;AAG7C;;;;;;;;;;;oCAQiB,gB,EAAkB;;AAEnC,OAAI,UAAU,IAAd;;AAEA,OAAI,qBAAqB,SAAzB,EAAoC;AACnC,uBAAmB,QAAQ,gBAA3B;AACA;;AAGD,oBAAiB,aAAjB,CAA+B,OAA/B,CAAuC,UAAS,QAAT,EAAmB,EAAnB,EAAuB;AAC7D,YAAQ,yBAAR,CAAkC,QAAlC;AACA,IAFD;AAIA;;;;;;;;;;4CAQyB,Q,EAAU;;AAEnC,OAAI,UAAU,IAAd;;AAEA,OAAI,iBAAiB,SAAS,cAA9B;;AAGA,WAAQ,GAAR,CAAY,+CAAZ,E;AACA,WAAQ,GAAR,CAAY,QAAZ;;;AAIA,YAAS,YAAT,CAAsB,EAAtB,CAAyB,SAAS,SAAT,CAAmB,MAAnB,CAA0B,sBAAnD,EAEE,UAAS,IAAT,EAAe;AACd,YAAQ,6BAAR,CAAsC,IAAtC,EACE;AACC,gBAAY;AADb,KADF;AAIA,IAPH;;AAWA,OAAI,mBAAmB,IAAvB,EAA6B;;;AAG5B,mBAAe,YAAf,CAA4B,EAA5B,CACE,eAAe,SAAf,CAAyB,MAAzB,CAAgC,oBADlC,EAEE,UAAS,IAAT,EAAc;AACb,aAAQ,2BAAR,CAAoC;AACnC,cAAQ,IAD2B;AAEnC,kBAAY;AAFuB,MAApC;AAIA,KAPH;;;AAWA,mBAAe,YAAf,CAA4B,EAA5B,CACE,eAAe,SAAf,CAAyB,MAAzB,CAAgC,mBADlC,EAEE,UAAS,IAAT,EAAc;AACb,aAAQ,0BAAR,CAAmC;AAClC,cAAQ,IAD0B;AAElC,kBAAY;AAFsB,MAAnC;AAIA,KAPH;AAUA;AAED;;;;;;;;;;;;;;sCAYmB,M,EAAQ,O,EAAS;;AAEpC,+GAA0B,MAA1B,EAAkC,OAAlC;;AAEA,OAAI,UAAU,IAAd;AACA,OAAI,QAAQ,OAAR,KAAoB,SAAxB,EAAmC;AAClC,cAAU,QAAQ,OAAlB;AACA;;AAED,OAAI,OAAO,QAAQ,gBAAnB;;;AAIA,UAAO,EAAP,CAAU,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,gBAArC,EAEC,UAAS,GAAT,EAAc;AACb,YAAQ,qBAAR,CAA8B,GAA9B,EAAmC,OAAnC;AACA,IAJF;;;AAQA,UAAO,EAAP,CAAU,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,kBAArC,EAEC,UAAS,GAAT,EAAc;AACb,YAAQ,uBAAR,CAAgC,GAAhC,EAAqC,OAArC;AACA,IAJF;;;AAQA,UAAO,EAAP,CAAU,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,kBAArC,EAEC,UAAS,GAAT,EAAc;AACb,YAAQ,uBAAR,CAAgC,GAAhC,EAAqC,OAArC;AACA,IAJF;;;AAQA,UAAO,EAAP,CAAU,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,aAArC,EAEC,UAAS,GAAT,EAAc;AACb,YAAQ,kBAAR,CAA2B,GAA3B,EAAgC,OAAhC;AACA,IAJF;;;AAQA,UAAO,EAAP,CAAU,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,YAArC,EAEC,UAAS,GAAT,EAAc;AACb,YAAQ,iBAAR,CAA0B,GAA1B,EAA+B,OAA/B;AACA,IAJF;;;AAQA,UAAO,EAAP,CAAU,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,gBAArC,EAEC,UAAS,GAAT,EAAc;AACb,YAAQ,qBAAR,CAA8B,GAA9B,EAAmC,OAAnC;AACA,IAJF;AAOA;;;;;;;;;;;;;wCAWqB,M,EAAQ,O,EAAS;;AAEtC,iHAA4B,MAA5B,EAAoC,OAApC;;AAEA,OAAI,UAAU,IAAd;AACA,OAAI,QAAQ,OAAR,KAAoB,SAAxB,EAAmC;AAClC,cAAU,QAAQ,OAAlB;AACA;;;;;;;;;AAUD,UAAO,kBAAP,CAA0B,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,gBAArD;AACA,UAAO,kBAAP,CAA0B,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,kBAArD;AACA,UAAO,kBAAP,CAA0B,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,kBAArD;AACA,UAAO,kBAAP,CAA0B,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,aAArD;AACA,UAAO,kBAAP,CAA0B,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,YAArD;AACA,UAAO,kBAAP,CAA0B,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,gBAArD;;AAGA,WAAQ,OAAR,GAAkB,IAAlB;AAEA;;;;;;;;;;;;;gDAW6B,I,EAAM,O,EAAS;;AAE5C,OAAI,UAAU,IAAd;;AAEA,OAAI,YAAY,SAAhB,EAA2B;AAC1B,cAAU,EAAV;AACA;;AAED,OAAI,QAAQ,OAAR,KAAoB,SAAxB,EAAmC;AAClC,cAAU,QAAQ,OAAlB;AACA;;AAED,OAAI,SAAS,QAAQ,cAAR,CAAuB,MAApC;;AAEA,OAAI,WAAW,KAAK,QAApB;;;AAGA,UAAO,IAAP,CAAY,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,sBAAvC,EAA+D;AAC9D,kBAAc,SAAS,MAAT,CAAgB;AADgC,IAA/D;AAIA;;;;;;;;;;;8CAS2B,I,EAAM;;AAEjC,OAAI,UAAU,IAAd;AACA,OAAI,SAAS,QAAQ,cAAR,CAAuB,MAApC;;AAEA,OAAI,WAAW,KAAK,QAApB;;;AAGA,UAAO,IAAP,CAAY,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,eAAvC,EAAwD;AACvD,kBAAc,SAAS,MAAT,CAAgB;AADyB,IAAxD;AAIA;;;;;;;;;;;6CAS0B,I,EAAM;;AAEhC,OAAI,UAAU,IAAd;AACA,OAAI,SAAS,QAAQ,cAAR,CAAuB,MAApC;;AAEA,OAAI,WAAW,KAAK,QAApB;;;AAGA,UAAO,IAAP,CAAY,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,eAAvC,EAAwD;AACvD,kBAAc,SAAS,MAAT,CAAgB;AADyB,IAAxD;AAIA;;;;;;;;wCAMqB,G,EAAK,O,EAAS;;AAEnC,OAAI,YAAY,SAAhB,EAA2B;AAC1B,cAAU,IAAV;AACA;AACD,OAAI,OAAO,QAAQ,gBAAnB;AACA,OAAI,SAAS,QAAQ,cAAR,CAAuB,MAApC;;AAEA,WAAQ,GAAR,CAAY,4DAAZ,E;;AAEA,OAAI,WAAW,EAAf;AACA,YAAS,YAAT,GAAwB,KAAK,aAAL,CAAmB,MAA3C;AACA,YAAS,SAAT,GAAqB,EAArB;;AAEA,QAAK,aAAL,CAAmB,OAAnB,CAA2B,UAAS,IAAT,EAAe,EAAf,EAAmB;;AAE7C,QAAI,WAAW;AACd,mBAAe,KAAK,MAAL,CAAY,EADb;AAEd,aAAS,KAAK,MAAL,CAAY,IAFP;AAGd,cAAU,KAAK,MAAL,CAAY;AAHR,KAAf;;AAMA,aAAS,SAAT,CAAmB,IAAnB,CAAyB,QAAzB;AACA,IATD;;;AAaA,UAAO,IAAP,CAAa,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,aAAxC,EAAuD,QAAvD;AAEA;;;;;;;;0CAMuB,G,EAAK,O,EAAS;;AAErC,OAAI,YAAY,SAAhB,EAA2B;AAC1B,cAAU,IAAV;AACA;;AAED,OAAI,OAAO,QAAQ,gBAAnB;AACA,OAAI,SAAS,QAAQ,cAAR,CAAuB,MAApC;;AAEA,WAAQ,GAAR,CAAY,8DAAZ,E;;AAEA,OAAI,aAAa,IAAI,UAArB;;AAEA,OAAI,WAAW;AACb,kBAAe;AADF,IAAf;;AAIA,OAAI;;AAEH,QAAI,iBAAiB,KAAK,eAAL,CAAqB,UAArB,CAArB;AACA,QAAG,eAAe,UAAf,KAA8B,IAAjC,EAAsC;AACrC,WAAM,qBAAN;AACA;;AAED,QAAI,WAAW,eAAe,UAA9B;;AAEA,aAAS,OAAT,GAAmB,SAAS,UAAT,EAAnB;;;AAGA,WAAO,IAAP,CAAY,QAAQ,SAAR,CAAkB,QAAlB,CAA2B,eAAvC,EAAwD,QAAxD;AAEA,IAdD,CAcE,OAAO,CAAP,EAAU;;AAEX,aAAS,MAAT,GAAkB,OAAlB;AACA,aAAS,KAAT,GAAiB,CAAjB;;AAEA,YAAQ,GAAR,CAAY,sEAAZ,E;AACA,YAAQ,GAAR,CAAY,QAAZ,E;AACA;AAED;;;;;;;;0CAMuB,G,EAAK,O,EAAS;;AAErC,OAAI,YAAY,SAAhB,EAA2B;AAC1B,cAAU,IAAV;AACA;;AAED,OAAI,OAAO,QAAQ,gBAAnB;;AAEA,WAAQ,GAAR,CAAY,8DAAZ,E;AACA,WAAQ,GAAR,CAAY,GAAZ,E;;AAEA,OAAI,aAAa,IAAI,UAArB;AACA,OAAI,UAAU,IAAI,OAAlB;;AAEA,OAAI,WAAW;AACb,kBAAe;AADF,IAAf;;AAIA,OAAI;;AAEH,QAAI,iBAAiB,KAAK,eAAL,CAAqB,UAArB,CAArB;AACA,QAAG,eAAe,UAAf,KAA8B,IAAjC,EAAsC;AACrC,WAAM,qBAAN;AACA;;AAED,QAAI,WAAW,eAAe,UAA9B;;AAEA,aAAS,UAAT,CAAoB,OAApB;AAEA,IAXD,CAWE,OAAO,CAAP,EAAU;;AAEX,aAAS,MAAT,GAAkB,OAAlB;AACA,aAAS,KAAT,GAAiB,CAAjB;;AAEA,YAAQ,GAAR,CAAY,sEAAZ,E;AACA,YAAQ,GAAR,CAAY,QAAZ,E;AACA;AAED;;;;;;;;qCAMkB,G,EAAK,O,EAAS;;AAEhC,OAAI,YAAY,SAAhB,EAA2B;AAC1B,cAAU,IAAV;AACA;;AAED,OAAI,OAAO,QAAQ,gBAAnB;;AAGA,WAAQ,GAAR,CAAY,yDAAZ,E;AACA,WAAQ,GAAR,CAAY,GAAZ,E;;;AAGA,OAAI,WAAW,EAAf;AACA,YAAS,MAAT,GAAkB,IAAlB;;AAEA,OAAI;;AAEH,QAAI,kBAAkB,KAAK,eAAL,CAAqB,IAAI,UAAzB,CAAtB;;AAEA,QAAI,gBAAgB,UAAhB,KAA+B,IAAnC,EAAyC;AACxC,qBAAgB,UAAhB,CAA2B,cAA3B,CAA0C,WAA1C;AACA,cAAS,MAAT,GAAkB,IAAlB;AACA,KAHD,MAGO;AACN,aAAQ,GAAR,CAAY,cAAZ,E;AACA,WAAM,qBAAN;AACA;AAED,IAZD,CAYE,OAAO,CAAP,EAAU;;AAEX,aAAS,MAAT,GAAkB,OAAlB;AACA,aAAS,KAAT,GAAiB,CAAjB;;AAEA,YAAQ,GAAR,CAAY,iEAAZ,E;AACA,YAAQ,GAAR,CAAY,QAAZ,E;AACA;;;AAID;;;;;;;;oCAMiB,G,EAAK,O,EAAS;;AAE/B,OAAI,YAAY,SAAhB,EAA2B;AAC1B,cAAU,IAAV;AACA;;AAED,OAAI,OAAO,QAAQ,gBAAnB;;AAEA,WAAQ,GAAR,CAAY,wDAAZ,E;AACA,WAAQ,GAAR,CAAY,GAAZ,E;;;AAGA,OAAI,WAAW,EAAf;AACA,YAAS,MAAT,GAAkB,IAAlB;;AAEA,OAAI;;AAEF,QAAI,kBAAkB,KAAK,eAAL,CAAqB,IAAI,UAAzB,CAAtB;;AAEA,QAAI,gBAAgB,UAAhB,KAA+B,IAAnC,EAAyC;AACxC,qBAAgB,UAAhB,CAA2B,cAA3B,CAA0C,UAA1C;AACA,cAAS,MAAT,GAAkB,IAAlB;AACA,KAHD,MAGO;AACR,WAAM,qBAAN;AACE;AACF,IAVD,CAUE,OAAO,CAAP,EAAU;;;AAGX,aAAS,MAAT,GAAkB,OAAlB;AACA,aAAS,KAAT,GAAiB,CAAjB;AACA,YAAQ,GAAR,CAAY,gEAAZ,E;AACA,YAAQ,GAAR,CAAY,QAAZ,E;AACA;AAED;;;;;;;;wCAMqB,G,EAAK,O,EAAS;;AAEnC,OAAI,YAAY,SAAhB,EAA2B;AAC1B,cAAU,IAAV;AACA;;AAED,OAAI,OAAO,QAAQ,gBAAnB;;AAEA,WAAQ,GAAR,CAAY,4DAAZ,E;;AAEA,OAAI,WAAW,EAAf;AACA,YAAS,MAAT,GAAkB,IAAlB;;AAEA,OAAI;;AAEH,SAAK,gBAAL;AAEA,IAJD,CAIE,OAAO,CAAP,EAAU;;AAEX,aAAS,MAAT,GAAkB,OAAlB;AACA,aAAS,KAAT,GAAiB,CAAjB;;AAEA,YAAQ,GAAR,CAAY,oEAAZ,E;AACA,YAAQ,GAAR,CAAY,QAAZ,E;AACA;AAED;;;;EApgByC,iB;;AA0gB3C,IAAI,OAAO;AACT,iCAAiC;AADxB,CAAX;;AAKA,OAAO,OAAP,GAAiB,IAAjB","file":"stEngines/enginesSYS_Hero/ngsysHero_NodeActuatorsSRV.js","sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * Actuators services\r\n * for Node role\r\n * \r\n * SomeThings Engines System library\r\n * version Hero\r\n * \r\n */\r\n\r\n/**\r\n * Import ActuatorsServices\r\n * @ignore\r\n */\r\nlet ActuatorsServices = require('../services/ActuatorsServices.js').ActuatorsServices;\r\n\r\n\r\n/**\r\n * Actuators Services\r\n * \r\n * <pre>\r\n * for role Node\r\n * \r\n * version Hero\r\n * \r\n * </pre>\r\n * \r\n * @class\r\n * @implements ActuatorsServices\r\n * \r\n */\r\nclass NGSYS_Hero_Node_ActuatorsSRV extends ActuatorsServices {\r\n\t\r\n\t/**\r\n\t * @constructs NGSYS_Hero_Node_ActuatorsSRV\r\n\t * \r\n\t * @param {ActuatorsManager} actuatorsManager - Actuators manager object\r\n\t * @param {object} controlChannel - Control channel object\r\n\t * \r\n\t */\r\n\tconstructor(actuatorsManager, controlChannel) {\r\n\t\t\r\n\t\tsuper(actuatorsManager, controlChannel);\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Map control events\r\n\t * \r\n\t * @param {ActuatorsManager} actuatorsManager - Actuators manager object\r\n\t */\r\n\t_mapControlEvents(actuatorsManager) {\r\n\t\t\r\n\t\tlet service = this;\r\n\t\t\r\n\t\tif (actuatorsManager === undefined) {\r\n\t\t\tactuatorsManager = service.actuatorsManager;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tactuatorsManager.actuatorsList.forEach(function(actuator, _i) {\r\n\t\t\tservice._mapActuatorControlEvents(actuator);\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Map control events for actuators\r\n\t * \r\n\t * @param {Actuator} actuator \r\n\t */\r\n\t_mapActuatorControlEvents(actuator) {\r\n\t\t\r\n\t\tlet service = this;\r\n\t\t\r\n\t\tlet actuatorEngine = actuator.actuatorEngine;\r\n\t\t\r\n\t\t\r\n\t\tconsole.log('<*> NGSYS_Hero_Node._mapActuatorControlEvents');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(actuator);\r\n\t\t\r\n\t\t\r\n\t\t// Map event ActuatorOptionsUpdated\r\n\t\tactuator.eventEmitter.on(actuator.CONSTANTS.Events.ActuatorOptionsUpdated, \r\n\t\t\t\t\r\n\t\t\t\tfunction(data) {\r\n\t\t\t\t\tservice._event_ActuatorOptionsUpdated(data,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"service\" : service\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t);\r\n\t\t\r\n\t\tif (actuatorEngine !== null) {\r\n\t\t\t\r\n\t\t\t// Map event ActuatorEngine_Start\r\n\t\t\tactuatorEngine.eventEmitter.on(\r\n\t\t\t\t\tactuatorEngine.CONSTANTS.Events.ActuatorEngine_Start, \r\n\t\t\t\t\tfunction(data){\r\n\t\t\t\t\t\tservice._event_ActuatorEngine_Start({\r\n\t\t\t\t\t\t\t\"data\": data,\r\n\t\t\t\t\t\t\t\"actuator\": actuator\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t);\r\n\t\t\t\r\n\t\t\t// Map event ActuatorEngine_Stop\r\n\t\t\tactuatorEngine.eventEmitter.on(\r\n\t\t\t\t\tactuatorEngine.CONSTANTS.Events.ActuatorEngine_Stop, \r\n\t\t\t\t\tfunction(data){\r\n\t\t\t\t\t\tservice._event_ActuatorEngine_Stop({\r\n\t\t\t\t\t\t\t\"data\": data,\r\n\t\t\t\t\t\t\t\"actuator\": actuator\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Map control messages\r\n\t * \r\n\t * \r\n\t * @param {object} socket - Socket object\r\n\t * @param {object} options - Options object\r\n\t * @param {NGSYS_Hero_Node_ActuatorsSRV} [options.service] - Actuators Service object\r\n\t * \r\n\t */\r\n\t_mapControlMessages(socket, options) {\r\n\t\t\r\n\t\tsuper._mapControlMessages(socket, options);\r\n\t\t\r\n\t\tlet service = this;\r\n\t\tif (options.service !== undefined) {\r\n\t\t\tservice = options.service;\r\n\t\t}\r\n\t\t\r\n\t\tlet amng = service.actuatorsManager;\r\n\t\t\r\n\t\t\r\n\t\t// Map message getActuatorsList\r\n\t\tsocket.on(service.CONSTANTS.Messages.getActuatorsList, \r\n\t\t\t\t\r\n\t\t\tfunction(msg) {\r\n\t\t\t\tservice._msg_getActuatorsList(msg, service);\r\n\t\t\t}\r\n\t\t);\r\n\t\t\r\n\t\t// Map message getActuatorOptions\r\n\t\tsocket.on(service.CONSTANTS.Messages.getActuatorOptions, \r\n\t\t\t\t\r\n\t\t\tfunction(msg) {\r\n\t\t\t\tservice._msg_getActuatorOptions(msg, service);\r\n\t\t\t}\t\t\t\t\r\n\t\t);\r\n\t\t\r\n\t\t// Map message setActuatorOptions\r\n\t\tsocket.on(service.CONSTANTS.Messages.setActuatorOptions, \r\n\t\t\t\t\r\n\t\t\tfunction(msg) {\r\n\t\t\t\tservice._msg_setActuatorOptions(msg, service);\r\n\t\t\t}\t\t\t\t\r\n\t\t);\r\n\t\t\r\n\t\t// Map message StartActuator\r\n\t\tsocket.on(service.CONSTANTS.Messages.StartActuator, \r\n\t\t\t\r\n\t\t\tfunction(msg) {\r\n\t\t\t\tservice._msg_StartActuator(msg, service);\r\n\t\t\t}\t\r\n\t\t);\r\n\t\t\r\n\t\t// Map message StopActuator\r\n\t\tsocket.on(service.CONSTANTS.Messages.StopActuator, \r\n\t\t\t\r\n\t\t\tfunction(msg) {\r\n\t\t\t\tservice._msg_StopActuator(msg, service);\r\n\t\t\t}\t\r\n\t\t);\r\n\t\t\r\n\t\t// Map message TurnOffActuators\r\n\t\tsocket.on(service.CONSTANTS.Messages.TurnOffActuators, \r\n\t\t\t\t\r\n\t\t\tfunction(msg) {\r\n\t\t\t\tservice._msg_TurnOffActuators(msg, service);\r\n\t\t\t}\t\r\n\t\t);\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Unmap control messages\r\n\t * \r\n\t * @param {object} socket - Socket object\r\n\t * @param {object} options - Options object\r\n\t * @param {NGSYS_Hero_Node_ActuatorsSRV} [options.service] - Actuators Service object\r\n\t *\r\n\t */\r\n\t_unmapControlMessages(socket, options) {\r\n\t\t\r\n\t\tsuper._unmapControlMessages(socket, options);\r\n\t\t\r\n\t\tlet service = this;\r\n\t\tif (options.service !== undefined) {\r\n\t\t\tservice = options.service;\r\n\t\t}\r\n\t\t\r\n//\t\tsocket.removeListener(service.CONSTANTS.Messages.getActuatorsList, service._msg_getActuatorsList);\r\n//\t\tsocket.removeListener(service.CONSTANTS.Messages.getActuatorOptions, service._msg_getActuatorOptions);\r\n//\t\tsocket.removeListener(service.CONSTANTS.Messages.setActuatorOptions, service._msg_setActuatorOptions);\r\n//\t\tsocket.removeListener(service.CONSTANTS.Messages.StartActuator, service._msg_StartActuator);\r\n//\t\tsocket.removeListener(service.CONSTANTS.Messages.StopActuator, service._msg_StopActuator);\r\n//\t\tsocket.removeListener(service.CONSTANTS.Messages.TurnOffActuators, service._msg_TurnOffActuators);\r\n\r\n\t\t\r\n\t\tsocket.removeAllListeners(service.CONSTANTS.Messages.getActuatorsList);\r\n\t\tsocket.removeAllListeners(service.CONSTANTS.Messages.getActuatorOptions);\r\n\t\tsocket.removeAllListeners(service.CONSTANTS.Messages.setActuatorOptions);\r\n\t\tsocket.removeAllListeners(service.CONSTANTS.Messages.StartActuator);\r\n\t\tsocket.removeAllListeners(service.CONSTANTS.Messages.StopActuator);\r\n\t\tsocket.removeAllListeners(service.CONSTANTS.Messages.TurnOffActuators);\r\n\r\n\t\t\r\n\t\tservice._mapped = null;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Event ActuatorOptionsUpdated\r\n\t * \t\r\n\t * @param {object} data - Data object\r\n\t * @param {object} options - Options object\r\n\t * @param {NGSYS_Hero_Node_ActuatorsSRV} [options.service] - Actuators Service object\r\n\t * \r\n\t */\r\n\t_event_ActuatorOptionsUpdated(data, options) {\r\n\t\t\r\n\t\tlet service = this;\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tif (options.service !== undefined) {\r\n\t\t\tservice = options.service;\r\n\t\t}\r\n\t\t\r\n\t\tlet socket = service.controlChannel.socket;\r\n\t\t\r\n\t\tlet actuator = data.actuator;\r\n\t\t\r\n\t\t// Emit message ActuatorOptionsUpdated\r\n\t\tsocket.emit(service.CONSTANTS.Messages.ActuatorOptionsUpdated, {\r\n\t\t\t\"actuatorID\": actuator.config.id\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Event ActuatorEngine_Start\r\n\t * \r\n\t * @param {object} data - Data object\r\n\t * \r\n\t */\r\n\t_event_ActuatorEngine_Start(data) {\r\n\t\t\r\n\t\tlet service = this;\r\n\t\tlet socket = service.controlChannel.socket;\r\n\t\t\r\n\t\tlet actuator = data.actuator;\r\n\t\t\r\n\t\t// Emit message ActuatorStarted\r\n\t\tsocket.emit(service.CONSTANTS.Messages.ActuatorStarted, {\r\n\t\t\t\"actuatorID\": actuator.config.id\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Event ActuatorEngine_Stop\r\n\t * \r\n\t * @param {object} data - Data object\r\n\t * \r\n\t */\r\n\t_event_ActuatorEngine_Stop(data) {\r\n\t\t\r\n\t\tlet service = this;\r\n\t\tlet socket = service.controlChannel.socket;\r\n\t\t\r\n\t\tlet actuator = data.actuator;\r\n\t\t\r\n\t\t// Emit message ActuatorStarted\r\n\t\tsocket.emit(service.CONSTANTS.Messages.ActuatorStopped, {\r\n\t\t\t\"actuatorID\": actuator.config.id\r\n\t\t});\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message getActuatorsList\r\n\t */\r\n\t_msg_getActuatorsList(msg, service) {\r\n\t\t\r\n\t\tif (service === undefined) {\r\n\t\t\tservice = this;\r\n\t\t}\r\n\t\tlet amng = service.actuatorsManager;\r\n\t\tlet socket = service.controlChannel.socket;\r\n\t\t\r\n\t\tconsole.log('<*> NGSYS_Hero_Node_ActuatorsSRV.Messages.getActuatorsList');\t// TODO REMOVE DEBUG LOG\r\n\t  \r\n\t\tlet response = {};\r\n\t\tresponse.numActuators = amng.actuatorsList.length;\r\n\t\tresponse.actuators = [];\r\n\t  \r\n\t\tamng.actuatorsList.forEach(function(act_, _i) {\r\n\t  \t\r\n\t\t\tlet actuator = {\r\n\t\t\t\t\"actuatorID\" : act_.config.id,\r\n\t\t\t\t\"type\" : act_.config.type,\r\n\t\t\t\t\"state\" : act_.config.state\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tresponse.actuators.push( actuator );\r\n\t\t});\r\n\t  \r\n\t  \r\n\t\t// Emit message ActuatorsList\r\n\t\tsocket.emit( service.CONSTANTS.Messages.ActuatorsList, response );\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message getActuatorOptions\r\n\t */\r\n\t_msg_getActuatorOptions(msg, service) {\r\n\t\t\r\n\t\tif (service === undefined) {\r\n\t\t\tservice = this;\r\n\t\t}\r\n\t\t\r\n\t\tlet amng = service.actuatorsManager;\r\n\t\tlet socket = service.controlChannel.socket;\r\n\t\t\r\n\t\tconsole.log('<*> NGSYS_Hero_Node_ActuatorsSRV.Messages.getActuatorOptions');\t// TODO REMOVE DEBUG LO\r\n\t\t  \r\n\t\tlet actuatorID = msg.actuatorID;\r\n\t\t  \r\n\t\tlet response = {\r\n\t\t  \"actuatorID\" : actuatorID\r\n\t\t};\r\n\t\t  \r\n\t\ttry {\r\n\t\t\t  \r\n\t\t\tlet actuatorSearch = amng.getActuatorByID(actuatorID);\r\n\t\t\tif(actuatorSearch.STactuator === null){\r\n\t\t\t\tthrow \"Actuator not found.\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet actuator = actuatorSearch.STactuator;\r\n\t\t\t  \r\n\t\t\tresponse.options = actuator.getOptions();\r\n\t\t\t \r\n\t\t\t// Emit message ActuatorOptions\r\n\t\t\tsocket.emit(service.CONSTANTS.Messages.ActuatorOptions, response);\r\n\t\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tresponse.result = \"ERROR\";\r\n\t\t\tresponse.error = e;\r\n\r\n\t\t\tconsole.log('<EEE> NGSYS_Hero_Node_ActuatorsSRV.Messages.getActuatorOptions ERROR');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(response);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message setActuatorOptions\r\n\t */\r\n\t_msg_setActuatorOptions(msg, service) {\r\n\t\t\r\n\t\tif (service === undefined) {\r\n\t\t\tservice = this;\r\n\t\t}\r\n\t\t\r\n\t\tlet amng = service.actuatorsManager;\r\n\t\t\t\r\n\t\tconsole.log('<*> NGSYS_Hero_Node_ActuatorsSRV.Messages.setActuatorOptions');\t// TODO REMOVE DEBUG LO\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LO\r\n\r\n\t\tlet actuatorID = msg.actuatorID;\r\n\t\tlet options = msg.options;\r\n\t\t  \r\n\t\tlet response = {\r\n\t\t\t\t\"actuatorID\" : actuatorID\r\n\t\t};\r\n\t\t  \r\n\t\ttry {\r\n\t\t \r\n\t\t\tlet actuatorSearch = amng.getActuatorByID(actuatorID);\r\n\t\t\tif(actuatorSearch.STactuator === null){\r\n\t\t\t\tthrow \"Actuator not found.\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet actuator = actuatorSearch.STactuator;\r\n\t\t\t\r\n\t\t\tactuator.setOptions(options);\r\n\t\t\t  \r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tresponse.result = \"ERROR\";\r\n\t\t\tresponse.error = e;\r\n\r\n\t\t\tconsole.log('<EEE> NGSYS_Hero_Node_ActuatorsSRV.Messages.setActuatorOptions ERROR');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(response);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message StartActuator\r\n\t */\r\n\t_msg_StartActuator(msg, service) {\r\n\t\t\r\n\t\tif (service === undefined) {\r\n\t\t\tservice = this;\r\n\t\t}\r\n\t\t\r\n\t\tlet amng = service.actuatorsManager;\r\n\r\n\t\t\r\n\t\tconsole.log('<*> NGSYS_Hero_Node_ActuatorsSRV.Messages.StartActuator');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n//\t\t  console.log(' <~> ' + msg);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\tlet response = {};\r\n\t\tresponse.result = null;\r\n\t  \r\n\t\ttry {\r\n\t\t\r\n\t\t\tlet _actuatorSearch = amng.getActuatorByID(msg.actuatorID);\r\n\t\t  \r\n\t\t\tif (_actuatorSearch.STactuator !== null) {\r\n\t\t\t\t_actuatorSearch.STactuator.actuatorEngine.startEngine();\r\n\t\t\t\tresponse.result = \"OK\";\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"Not found!!!\");\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\tthrow \"Actuator not found.\";  \r\n\t\t\t}\r\n\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tresponse.result = \"ERROR\";\r\n\t\t\tresponse.error = e;\r\n\t\t\t\r\n\t\t\tconsole.log('<EEE> NGSYS_Hero_Node_ActuatorsSRV.Messages.StartActuator ERROR');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(response);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n//\t\t\tmsg.result = response.result;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message StopActuator\r\n\t */\r\n\t_msg_StopActuator(msg, service) {\r\n\t\t\r\n\t\tif (service === undefined) {\r\n\t\t\tservice = this;\r\n\t\t}\r\n\t\t\r\n\t\tlet amng = service.actuatorsManager;\r\n\t\t\r\n\t\tconsole.log('<*> NGSYS_Hero_Node_ActuatorsSRV.Messages.StopActuator');\t// TODO REMOVE DEBUG LOG\r\n\t\tconsole.log(msg);\t// TODO REMOVE DEBUG LOG\r\n//\t\tconsole.log(' <~> ' + msg);\t// TODO REMOVE DEBUG LOG\r\n\t\t  \r\n\t\tlet response = {};\r\n\t\tresponse.result = null;\r\n\t\t  \r\n\t\ttry {\r\n\t\t\t\r\n\t\t  let _actuatorSearch = amng.getActuatorByID(msg.actuatorID);\r\n\t\t\t  \r\n\t\t  if (_actuatorSearch.STactuator !== null) {\r\n\t\t\t  _actuatorSearch.STactuator.actuatorEngine.stopEngine();\r\n\t\t\t  response.result = \"OK\";\r\n\t\t  } else {\r\n\t\t\tthrow \"Actuator not found.\";  \r\n\t\t  }\r\n\t\t} catch (e) {\r\n\t\t\t\r\n\t\t\t// TODO: handle exception\r\n\t\t\tresponse.result = \"ERROR\";\r\n\t\t\tresponse.error = e;\r\n\t\t\tconsole.log('<EEE> NGSYS_Hero_Node_ActuatorsSRV.Messages.StopActuator ERROR');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(response);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Message TurnOffActuators\r\n\t */\r\n\t_msg_TurnOffActuators(msg, service) {\r\n\t\t\r\n\t\tif (service === undefined) {\r\n\t\t\tservice = this;\r\n\t\t}\r\n\t\t\r\n\t\tlet amng = service.actuatorsManager;\r\n\t\t\r\n\t\tconsole.log('<*> NGSYS_Hero_Node_ActuatorsSRV.Messages.TurnOffActuators');\t// TODO REMOVE DEBUG LOG\r\n\t  \r\n\t\tlet response = {};\r\n\t\tresponse.result = null;\r\n\t  \r\n\t\ttry {\r\n\t\t\r\n\t\t\tamng.turnOffActuators();\r\n\r\n\t\t} catch (e) {\r\n\t\t\t// TODO: handle exception\r\n\t\t\tresponse.result = \"ERROR\";\r\n\t\t\tresponse.error = e;\r\n\r\n\t\t\tconsole.log('<EEE> NGSYS_Hero_Node_ActuatorsSRV.Messages.TurnOffActuators ERROR');\t// TODO REMOVE DEBUG LOG\r\n\t\t\tconsole.log(response);\t// TODO REMOVE DEBUG LOG\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n\r\nlet _Lib = {\r\n\t\t\"NGSYS_Hero_Node_ActuatorsSRV\" : NGSYS_Hero_Node_ActuatorsSRV\r\n\t};\r\n\r\n\r\nmodule.exports = _Lib;\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STEngines\\es6"}