{"version":3,"sources":["stEngines/Actuator.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAiBA,IAAI,eAAe,QAAQ,QAAR,EAAkB,YAArC;;;;;;AAOA,IAAI,qBAAqB,QAAQ,qBAAR,EAA+B,kBAAxD;;;;;;;;AASA,IAAM,qBAAqB;;AAE1B,WAAW;AACV,4BAA2B;AADjB;;AAFe,CAA3B;;;;;;;;;;;;;;;IAsBM,Q;;;;;;;;AAOL,mBAAY,MAAZ,EAAoB;AAAA;;AAEnB,MAAI,OAAO,IAAX;;AAEA,OAAK,OAAL,GAAe,KAAf;AACA,OAAK,MAAL,GAAc,MAAd;AACA,OAAK,SAAL,GAAiB,kBAAjB;AACA,OAAK,YAAL,GAAoB,IAAI,YAAJ,EAApB;AACA,OAAK,cAAL,GAAsB,IAAtB;AAEA;;;;;;;;;+BAKY;;AAEZ,OAAI,OAAO,IAAX;AACA,OAAI,UAAU,KAAK,MAAnB;AACA,OAAI,iBAAiB,QAAQ,OAA7B;;AAGA,OAAI,QAAQ,OAAR,KAAoB,IAAxB,EAA8B;AAC7B,SAAK,OAAL,GAAe,IAAf;AACA;;;AAGD,OAAI,KAAK,OAAL,KAAiB,IAArB,EAA2B;AAC1B;AACA;;;;;AAMD,OAAM,eAAe,iBAAf,KAAqC,SAArC,IACJ,eAAe,iBAAf,KAAqC,IADlC,IAEF,eAAe,SAAf,KAA6B,SAFhC,EAE6C;;AAE5C,uBAAmB,wBAAnB,CAA4C,IAA5C;AAEA;;AAGD;;;;;;;;;;;;+BAUY;;AAEZ,OAAI,OAAO,IAAX;AACA,OAAI,UAAU,KAAK,MAAnB;AACA,OAAI,WAAW,QAAQ,OAAvB;;AAGA,OAAI,aAAa;AAChB,gBAAa,QAAQ,QADL;AAEhB,iBAAa,SAAS,SAFN;AAGhB,iBAAa,SAAS,SAHN;AAIhB,qBAAiB;AAJD,IAAjB;;AAQA,OAAK,KAAK,cAAL,KAAwB,IAA7B,EAAoC;;AAEnC,eAAW,aAAX,GAA2B,KAAK,cAAL,CAAoB,UAApB,EAA3B;AACA;;AAED,UAAO,UAAP;AACA;;;;;;;;;;;;6BAUU,O,EAAQ;;AAElB,OAAI,OAAO,IAAX;;AAEA,OAAI,KAAK,cAAL,IACF,KAAK,cAAL,CAAoB,KAApB,KAA8B,KAAK,cAAL,CAAoB,SAApB,CAA8B,MAA9B,CAAqC,OADrE,EAC8E;AAC7E,UAAM,qBAAN;AACA;;AAED,OAAI,QAAQ,QAAZ,EAAsB;AACrB,SAAK,MAAL,CAAY,QAAZ,GAAuB,QAAQ,QAA/B;AACA;;AAED,OAAI,QAAQ,aAAZ,EAA2B;;;;;;AAM1B,SAAK,cAAL,CAAoB,UAApB,CAA+B;AAC7B,qBAAgB,KAAK,cADQ;AAE7B,mBAAc,QAAQ,aAFO;AAG7B,oBAAe;AAHc,KAA/B;AAMA;;;AAGD,QAAK,YAAL,CAAkB,IAAlB,CAAuB,KAAK,SAAL,CAAe,MAAf,CAAsB,sBAA7C,EAAqE,EAAC,YAAY,IAAb,EAArE;AAEA;;;;;;AAMF,OAAO,OAAP,GAAiB,QAAjB","file":"stEngines/Actuator.js","sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * Actuator\r\n * \r\n * Generic object for an Actuator\r\n * \r\n * ... the actuator process is manager by the ActutatorEngine\r\n * \r\n * @ignore\r\n */\r\n\r\n\r\n/**\r\n * Import EventEmitter\r\n * @ignore\r\n */\r\nlet EventEmitter = require('events').EventEmitter;\r\n\r\n\r\n/**\r\n * Import ActuatorEngine library\r\n * @ignore\r\n */\r\nlet ActuatorEngine_Lib = require('./ActuatorEngine.js').ActuatorEngine_Lib;\r\n\r\n\r\n/**\r\n * Actuator CONSTANTS\r\n * \r\n * @memberof st.ngn\r\n * \r\n */\r\nconst Actuator_CONSTANTS = {\r\n\r\n\t\"Events\" : {\r\n\t\t\"ActuatorOptionsUpdated\" : \"Actuator Options Updated\"\r\n\t}\r\n\r\n};\r\n\r\n\r\n\r\n/**\r\n * Actuator\r\n * \r\n * @class\r\n * @memberof st.ngn\r\n * \r\n * @property {boolean} enabled - Enabled flag.\r\n * @property {object} config - Configuration.\r\n * @property {object} eventEmitter - Object for emit events.\r\n * @property {object} actuatorEngine - Actuator engine.\r\n * \r\n */\r\nclass Actuator {\r\n\t\r\n\t/**\r\n\t * @constructs Actuator\r\n\t * \r\n\t * @param {object} config Configuration object\r\n\t */\r\n\tconstructor(config) {\r\n\t\t\r\n\t\tlet _act = this;\r\n\t\t\r\n\t\t_act.enabled = false;\r\n\t\t_act.config = config;\r\n\t\t_act.CONSTANTS = Actuator_CONSTANTS;\r\n\t\t_act.eventEmitter = new EventEmitter();\r\n\t\t_act.actuatorEngine = null;\r\n\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize Actuator\r\n\t */\r\n\tinitialize() {\r\n\t\t\r\n\t\tlet _act = this;\r\n\t\tlet _config = _act.config;\r\n\t\tlet _configOptions = _config.options;\r\n\t\t\r\n\t\t\r\n\t\tif (_config.enabled === true) {\r\n\t\t\t_act.enabled = true;\r\n\t\t}\r\n\t\t\r\n\t\t// Only when is enabled\r\n\t\tif (_act.enabled !== true) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ _ ~~~ - ~~~ - ~~~ - ~~~ _ ~~~ - ~~~ - ~~~ \\/ ~~~\r\n\t\t// Actuator Engine URL or stIRI\r\n\t\t\r\n\t\tif ( (_configOptions.actuatorEngineURL !== undefined && \r\n\t\t\t\t_configOptions.actuatorEngineURL !== null) || \r\n\t\t\t\t(_configOptions.engineURI !== undefined) ) {\r\n\t\t\t\r\n\t\t\tActuatorEngine_Lib.initialze_ActuatorEngine(_act);\r\n\r\n\t\t} \r\n\t\t// ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ _ ~~~ - ~~~ - ~~~ - ~~~ _ ~~~ - ~~~ - ~~~ /\\ ~~~\r\n\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Returns Actuator options\r\n\t * \r\n\t * also includes the actuator engine options\r\n\t * \r\n\t * @returns {object} Actuator options\r\n\t */\r\n\tgetOptions() {\r\n\t\t\r\n\t\tlet _act = this;\r\n\t\tlet _config = _act.config;\r\n\t\tlet _options = _config.options;\r\n\t\t\r\n\t\t\r\n\t\tlet actOptions = {\r\n\t\t\t\"loopTime\" : _config.loopTime,\r\n\t\t\t\"engineURI\": _options.engineURI,\r\n\t\t\t\"engineURL\": _options.engineURL,\r\n\t\t\t'engineOptions': null\r\n\t\t};\r\n\t\t\r\n\t\t\r\n\t\tif ( _act.actuatorEngine !== null ) {\r\n\t\t\t// Get engine options in synchro mode...\r\n\t\t\tactOptions.engineOptions = _act.actuatorEngine.getOptions();\r\n\t\t}\r\n\t\t\r\n\t\treturn actOptions;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Set actuator options\r\n\t * \r\n\t * also includes the actuator engine options\r\n\t * \r\n\t * @param {object} options Options object\r\n\t */\r\n\tsetOptions(options){\r\n\t\t\r\n\t\tlet _act = this;\r\n\t\t\r\n\t\tif (_act.actuatorEngine && \r\n\t\t\t\t_act.actuatorEngine.state === _act.actuatorEngine.CONSTANTS.States.Working) {\r\n\t\t\tthrow \"Bad actuator state.\";\r\n\t\t}\r\n\t\t\r\n\t\tif (options.loopTime) {\r\n\t\t\t_act.config.loopTime = options.loopTime;\r\n\t\t}\r\n\t\t\r\n\t\tif (options.engineOptions) {\r\n\t\t\t\r\n\t\t\t// Set engine options in synchro mode...\r\n\t\t\t\r\n\t\t\t//_act.actuatorEngine.setOptions(options.engineOptions);\r\n\t\t\t \r\n\t\t\t_act.actuatorEngine.setOptions({\r\n\t\t\t\t 'ngnInterface': _act.actuatorEngine,\r\n\t\t\t\t 'ngnOptions': options.engineOptions,\r\n\t\t\t\t 'bngnOptions': options\r\n\t\t\t });\r\n\t\t\t \r\n\t\t}\r\n\t\t\r\n\t\t// Emit event 'ActuatorOptionsUpdated'\r\n\t\t_act.eventEmitter.emit(_act.CONSTANTS.Events.ActuatorOptionsUpdated, {\"actuator\": _act});\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n\r\nmodule.exports = Actuator;\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STEngines\\es6"}