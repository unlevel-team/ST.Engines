{"version":3,"sources":["stEngines/stActuators/stActuator_Dummy01.js"],"names":[],"mappings":"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","file":"stEngines/stActuators/stActuator_Dummy01.js","sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * ST Actuator Dummy01\r\n * \r\n * <pre>\r\n * Actuator for made some tests..\r\n * \r\n * </pre>\r\n * \r\n * \r\n */\r\n\r\n\r\n/**\r\n * STActuator_Dummy01 configuration object.\r\n * \r\n * @typedef {Object} Config\r\n * @memberof st.ngn.STSensor_Dummy01\r\n * \r\n * @type Object\r\n * @property {boolean} showTime - Show current time.\r\n * @property {boolean} showDeltaTime - Show time interval time.\r\n * @property {number} ticks - Number of 'ticks' interval.\r\n * \r\n * \r\n */\r\n\r\n\r\n/**\r\n * ST Actuator Dummy01\r\n * \r\n * @class\r\n * @memberof st.ngn\r\n * \r\n */\r\nclass STActuator_Dummy01 {\r\n\t\r\n\t\r\n\t/**\r\n\t * @constructs STActuator_Dummy01\r\n\t * \r\n\t * @param {object} options - Options object\r\n\t * @param {st.ngn.STActuator_Dummy01.Config} options.config - Configuration object\r\n\t */\r\n\tconstructor(options) {\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tlet _config = {};\r\n\t\tif (options.config === undefined) {\r\n\t\t\t_config = options.config;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tlet _actEngine = this;\r\n\t\t\r\n\t\t_actEngine._config  = _config;\r\n\t\t_actEngine.eventEmitter = null;\r\n\t\t\r\n\t\t\r\n\t\t_actEngine.name = \"STActuator_Dummy01\";\r\n\t\t_actEngine._lastTime = null;\r\n\t\t_actEngine._ticks = 0;\r\n\t\t\r\n\t\t_actEngine._options = {\r\n\t\t\t'showTime': true,\r\n\t\t\t'showDeltaTime': true,\r\n\t\t\t'ticks': 3\r\n\t\t};\r\n\r\n\r\n\t}\r\n\r\n\t\r\n\tinitialize() {\r\n\t\t\r\n\t\tlet _actEngine = this;\r\n\r\n\t\t\r\n\t\t/** \r\n\t\t * Import EventEmitter\r\n\t\t * @ignore\r\n\t\t */\r\n\t\tlet _EventEmitter = require('events').EventEmitter;\r\n\t\t_actEngine.eventEmitter = new _EventEmitter(); \r\n\t\t\r\n\t\tlet _config = _actEngine._config\r\n\t\tlet _options = _actEngine._options;\r\n\t\t\r\n\t\tif (_config.showTime === false) {\r\n\t\t\t_options.showTime = false;\r\n\t\t}\r\n\t\t\r\n\t\tif (_config.showDeltaTime === false) {\r\n\t\t\t_options.showDeltaTime = false;\r\n\t\t}\r\n\r\n\t\tif (_config.ticks !== undefined) {\r\n\t\t\t_options.ticks = _config.ticks;\r\n\t\t}\r\n\r\n\t\r\n\t\t_actEngine._mapEngineEvents();\r\n\t}\r\n\t\r\n\t\r\n\t_mapEngineEvents(options) {\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\r\n\t\t\r\n\t\tlet _actEngine = this;\r\n\t\tif (options.engine !== undefined) {\r\n\t\t\t_actEngine = options.engine;\r\n\t\t}\r\n\t\t\r\n\t\t_actEngine.eventEmitter.on('Main Loop Tick', function(_data) {\r\n\t\t\t\r\n\t\t\t_actEngine._event_MainLoopTick({\r\n\t\t\t\t'engine': _actEngine,\r\n\t\t\t\t'data': _data\r\n\t\t\t});\r\n\t\t\t\r\n\t\t});\r\n\r\n\r\n\t}\r\n\t\r\n\t\r\n\t_event_MainLoopTick(options) {\r\n\t\t\r\n\t\tlet _actEngine = this;\r\n\t\tif (options.engine !== undefined) {\r\n\t\t\t_actEngine = options.engine;\r\n\t\t}\r\n\t\t\r\n\t\tlet _options = _actEngine._options;\r\n\t\t\r\n\t\tlet _data = options.data;\r\n\t\t\r\n\t\t\r\n\t\tconsole.log('<~i~> STActuator_Dummy01 (_event_MainLoopTick):');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t\r\n\t\t_actEngine._ticks++;\r\n\t\t\r\n\t\tif (_actEngine._ticks >= _options.ticks) {\r\n\t\t\t\r\n\t\t\t_actEngine._ticks = 0;\r\n\t\t\t_actEngine._lastTime = new Date().getTime();\r\n\t\t\t\r\n\t\t\tconsole.log('<~i~> STActuator_Dummy01 (info):');\t// TODO REMOVE DEBUG LOG\r\n\r\n\t\t  \r\n\t\t\tif (_options.showTime === true) {\r\n\t\t\t\tconsole.log(' <~~~> Time: ' + _actEngine._lastTime);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (_options.showDeltaTime === true) {\r\n\t\t\t\tif (_actEngine._deltaTimeRef !== undefined) {\r\n\t\t\t\t\tlet _deltaTime = _actEngine._lastTime - _actEngine._deltaTimeRef;\r\n\t\t\t\t\tconsole.log(' <~~~> DetalTime: ' + _deltaTime );\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\t}\r\n\t\t\t\t_actEngine._deltaTimeRef = _actEngine._lastTime;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get options of engine\r\n\t * \r\n\t * @param {object} options - Options\r\n\t * @param {object} [options.actuator] - Actuator object\r\n\t */\r\n\tgetOptions(options) {\r\n\t\t\r\n\t\tlet _actEngine = this;\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tif (options.actuator !== undefined) {\r\n\t\t\t_actEngine = options.actuator;\r\n\t\t}\r\n\t\t\r\n\t\treturn _actEngine._options;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get options of engine using the interface\r\n\t * \r\n\t * @param {object} options - Options\r\n\t * @param {object} options.ngnInterface - Engine interface\r\n\t */\r\n\t_getOptions(options) {\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tif (options.ngnInterface === undefined) {\r\n\t\t\tthrow 'ngnInterface is required.';\r\n\t\t}\r\n\t\tlet _ngnInterface = options.ngnInterface;\r\n\t\t\r\n\t\tlet _actEngine = _ngnInterface.custom_engine;\r\n\t\treturn _actEngine.getOptions({\r\n\t\t\t'actuator': _actEngine\r\n\t\t});\r\n\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Set options\r\n\t * \r\n\t * @param {object} options - Options object\r\n\t * @param {object} [options.actuator] - Actuator object\r\n\t * @param {object} options.options - Options object\r\n\t * @param {number} [options.options.ticks] - Ticks \r\n\t * @param {boolean} [options.options.showTime] - Show time\r\n\t * @param {boolean} [options.options.showDeltaTime] - Show delta time \r\n\t */\r\n\tsetOptions(options) {\r\n\t\t\r\n\t\tlet _actEngine = this;\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tif (options.actuator !== undefined) {\r\n\t\t\t_actEngine = options.actuator;\r\n\t\t}\r\n\r\n\t\tlet _options = {};\r\n\t\tif (options.options !== undefined) {\r\n\t\t\t_options = options.options;\r\n\t\t}\r\n\t\t\r\n\t\t/*\r\n\t\tif (stSensor.state === stSensor.CONSTANTS.States.Working) {\r\n\t\t\tthrow \"Bad sensor state.\";\r\n\t\t}\r\n\t\t*/\r\n\t\t\r\n\t\tlet _snsOptions = _actEngine._options;\r\n\t\t\r\n\t\tif (_options.ticks) {\r\n\t\t\t_snsOptions.ticks = _options.ticks;\r\n\t\t}\r\n\t\t\r\n\t\tif (_options.showTime !== undefined) {\r\n\t\t\t_snsOptions.showTime = _options.showTime;\r\n\t\t}\r\n\t\t\r\n\t\tif (_options.showDeltaTime !== undefined) {\r\n\t\t\t_snsOptions.showDeltaTime = _options.showDeltaTime;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Set options using the interface\r\n\t * \r\n\t * @param {object} options - Options\r\n\t * @param {object} options.ngnInterface - Engine interface\r\n\t * @param {object} options.ngnOptions - Engine options\r\n\t */\r\n\t_setOptions(options) {\r\n\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tif (options.ngnInterface === undefined) {\r\n\t\t\tthrow 'ngnInterface options is required.';\r\n\t\t}\r\n\t\tlet _ngnInterface = options.ngnInterface;\r\n\t\t\r\n\t\tlet _actEngine = _ngnInterface.custom_engine;\r\n\t\t_actEngine.setOptions({\r\n\t\t\t'actuator': _actEngine,\r\n\t\t\t'options': options.ngnOptions\r\n\t\t});\r\n\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\t\r\n}\r\n\r\n\r\n/**\r\n * Returns an engine interface for use with ST library\r\n * \r\n * <pre>\r\n * - The library should return a method named 'get_NGNInterface'\r\n * </pre>\r\n * \r\n * @param {Object} options - options\r\n * @param {Object} options.config - Configuration \r\n * \r\n * @returns {st.ngn.baseEngines.EngineInterface}\r\n */\r\nfunction _get_NGNInterface (options) {\r\n\t\r\n\tif (options === undefined ||\r\n\t\t\toptions === null) {\r\n\t\toptions = {};\r\n\t}\r\n\t\r\n\t\r\n\t/*\r\n\t// reference library for specific methods... \r\n\t\r\n\tif (options.st === undefined) {\r\n\t\tthrow 'SomeThings library no fonud';\r\n\t}\r\n\tlet _st = options.st;\r\n\t*/\r\n\t\r\n\t// console.log('<~i~> STActuator_Dummy01 (_get_NGNInterface):');\t// TODO REMOVE DEBUG LOG\r\n\t// console.log(options);\t// TODO REMOVE DEBUG LOG\r\n\t// console.log(options.config.config.bngnOptions);\t// TODO REMOVE DEBUG LOG\r\n\r\n\t// Set custom options\r\n\tlet _customOptions = [\r\n\t\t{\r\n\t\t\t'name': 'ticks',\r\n\t\t\t'type': 'number',\r\n\t\t\t'description': 'Number of ticks to wait...'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'showTime',\r\n\t\t\t'type': 'boolean',\r\n\t\t\t'alias': 'Show time',\r\n\t\t\t'description': 'Show time or not'\r\n\t\t},\r\n\t\t{\r\n\t\t\t'name': 'showDeltaTime',\r\n\t\t\t'type': 'boolean',\r\n\t\t\t'alias': 'Show delta time',\r\n\t\t\t'description': 'Show delta time or not'\r\n\t\t}\r\n\t];\r\n\t\r\n\t\r\n\tlet _actDummy01 = new STActuator_Dummy01(options.config);\r\n\t_actDummy01.initialize();\r\n\r\n\tlet _ngnInterface = {\r\n\t\t'name': _actDummy01.name,\r\n\t\t'type': 'actuator',\r\n\t\t'eventEmitter': _actDummy01.eventEmitter,\r\n\r\n\t\t'baseNGN': 'SimpleLoop',\r\n\t\t\r\n\t\t'custom_engine': _actDummy01,\r\n\t\t'custom_options': _customOptions,\r\n\t\t'getOptions': _actDummy01._getOptions,\r\n\t\t'setOptions': _actDummy01._setOptions\r\n\t\r\n\t};\r\n\r\n\t\r\n\treturn _ngnInterface;\r\n\t\r\n}\r\n\r\n\r\nlet _lib = {\r\n\t'get_NGNInterface': _get_NGNInterface\r\n};\r\n\r\n\r\nmodule.exports = _lib;\r\n\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STEngines\\es6"}