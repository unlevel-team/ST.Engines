{"version":3,"sources":["stEngines/Sensor.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAeA,IAAI,eAAe,QAAQ,QAAR,EAAkB,YAArC;;;;;;AAMA,IAAI,mBAAmB,QAAQ,mBAAR,EAA6B,gBAApD;;;;;;;AASA,IAAM,mBAAmB;;AAExB,WAAW;AACV,0BAAyB;AADf;AAFa,CAAzB;;;;;;;;;;;;;;;IAoBM,M;;;;;;;AAML,iBAAY,MAAZ,EAAoB;AAAA;;AAEnB,MAAI,UAAU,IAAd;;AAEA,UAAQ,OAAR,GAAkB,KAAlB;AACA,UAAQ,MAAR,GAAiB,MAAjB;AACA,UAAQ,SAAR,GAAoB,gBAApB;AACA,UAAQ,YAAR,GAAuB,IAAI,YAAJ,EAAvB;AACA,UAAQ,YAAR,GAAuB,IAAvB;AAEA;;;;;;;;;+BAMY;;AAEZ,OAAI,UAAU,IAAd;AACA,OAAI,UAAU,QAAQ,MAAtB;AACA,OAAI,iBAAiB,QAAQ,OAA7B;;AAGA,OAAI,QAAQ,OAAR,KAAoB,IAAxB,EAA8B;AAC7B,YAAQ,OAAR,GAAkB,IAAlB;AACA;;;AAGD,OAAI,QAAQ,OAAR,KAAoB,IAAxB,EAA8B;AAC7B;AACA;;;;AAID,OAAI,eAAe,eAAf,KAAmC,SAAnC,IACF,eAAe,eAAf,KAAmC,IADrC,EAC2C;;AAG1C,qBAAiB,sBAAjB,CAAwC,OAAxC;;;;;;;;;;;;;;;;AAmBA;;;AAGD,OAAI,eAAe,YAAf,KAAgC,SAAhC,IACF,eAAe,YAAf,KAAgC,IADlC,EACwC,CAGvC;AAGD;;;;;;;;;;+BAQW;;AAEX,OAAI,SAAS,IAAb;;AAEA,OAAI,gBAAgB;AAClB,gBAAa,OAAO,MAAP,CAAc,QADT;AAElB,uBAAmB,OAAO,MAAP,CAAc,OAAd,CAAsB;;AAFvB,IAApB;;AAMA,OAAK,OAAO,YAAP,KAAwB,IAA7B,EAAoC;AACnC,kBAAc,aAAd,GAA8B,OAAO,YAAP,CAAoB,UAApB,EAA9B;AACA;;AAGD,UAAO,aAAP;AACA;;;;;;;;;;6BAQU,O,EAAQ;;AAElB,OAAI,SAAS,IAAb;;AAEA,OAAI,OAAO,YAAP,KAAwB,SAAxB,IACF,OAAO,YAAP,CAAoB,KAApB,KAA8B,OAAO,YAAP,CAAoB,SAApB,CAA8B,MAA9B,CAAqC,eADrE,EACsF;AACrF,UAAM,mBAAN;AACA;;AAED,OAAI,QAAQ,QAAZ,EAAsB;AACrB,WAAO,MAAP,CAAc,QAAd,GAAyB,QAAQ,QAAjC;AACA;;AAED,OAAI,QAAQ,aAAZ,EAA2B;AAC1B,WAAO,YAAP,CAAoB,UAApB,CAA+B,QAAQ,aAAvC;AACA;;;AAGD,UAAO,YAAP,CAAoB,IAApB,CAAyB,OAAO,SAAP,CAAiB,MAAjB,CAAwB,oBAAjD,EAAuE,EAAC,UAAU,MAAX,EAAvE;AAEA;;;;;;AAOF,OAAO,OAAP,GAAiB,MAAjB","file":"stEngines/Sensor.js","sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * Actuator\r\n * \r\n * Generic object for a Sensor\r\n * \r\n */\r\n\r\n\r\n\r\n/**\r\n * Import EventEmitter\r\n * @ignore\r\n */\r\nlet EventEmitter = require('events').EventEmitter;\r\n\r\n/**\r\n * Import SensorEngine library\r\n * @ignore\r\n */\r\nlet SensorEngine_Lib = require('./SensorEngine.js').SensorEngine_Lib;\r\n\r\n\r\n\r\n/**\r\n * Sensor constants\r\n * \r\n * @memberof st.ngn\r\n */\r\nconst Sensor_CONSTANTS = {\r\n\t\r\n\t\"Events\" : {\r\n\t\t\"SensorOptionsUpdated\" : \"Sensor Options Updated\"\r\n\t}\r\n};\r\n\r\n\r\n/**\r\n * Sensor\r\n * \r\n * @class\r\n * @memberof st.ngn\r\n * \r\n * @property {boolean} enabled - Enabled flag.\r\n * @property {object} config - Configuration.\r\n * @property {object} eventEmitter - Object for emit events.\r\n * @property {object} sensorEngine - Sensor engine.\r\n * \r\n */\r\nclass Sensor {\r\n\t\r\n\t/**\r\n\t * @constructs Sensor\r\n\t * @param {object} config Configuration object\r\n\t */\r\n\tconstructor(config) {\r\n\t\t\r\n\t\tlet _sensor = this;\r\n\t\t\r\n\t\t_sensor.enabled = false;\r\n\t\t_sensor.config = config;\r\n\t\t_sensor.CONSTANTS = Sensor_CONSTANTS;\r\n\t\t_sensor.eventEmitter = new EventEmitter();\r\n\t\t_sensor.sensorEngine = null;\r\n\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize Sensor\r\n\t */\r\n\tinitialize() {\r\n\t\t\r\n\t\tlet _sensor = this;\r\n\t\tlet _config = _sensor.config;\r\n\t\tlet _configOptions = _config.options;\r\n\t\t\r\n\t\t\r\n\t\tif (_config.enabled === true) {\r\n\t\t\t_sensor.enabled = true;\r\n\t\t}\r\n\t\t\r\n\t\t// Only when is enabled\r\n\t\tif (_sensor.enabled !== true) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t// ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ _ ~~~ - ~~~ - ~~~ - ~~~ _ ~~~ - ~~~ - ~~~ \\/ ~~~\r\n\t\t// Sensor Engine URL \r\n\t\tif (_configOptions.sensorEngineURL !== undefined && \r\n\t\t\t\t_configOptions.sensorEngineURL !== null) {\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tSensorEngine_Lib.initialze_SensorEngine(_sensor);\r\n\t\t\t\r\n\t\t\t\r\n//\t\t\tsensor._sensorEngine = null;\r\n//\t\t\t\r\n//\t\t\ttry {\r\n//\t\t\t\tsensor._sensorEngine = require(sensor.config.options.sensorEngineURL);\r\n//\t\t\t\tsensor.sensorEngine = new sensor._sensorEngine(sensor.config);\r\n//\t\t\t\tsensor.sensorEngine.initialize();\r\n//\t\t\t\t\r\n//\t\t\t} catch (e) {\r\n//\t\t\t\t// TODO: handle exception\r\n//\t\t\t\t  console.log('<EEE> Sensor.initialize');\t// TODO REMOVE DEBUG LOG\r\n//\t\t\t\t  console.log(e);\t// TODO REMOVE DEBUG LOG\r\n//\t\t\t\t  console.log(sensor.config);\t// TODO REMOVE DEBUG LOG\r\n//\r\n//\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t} \r\n\t\t// ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ _ ~~~ - ~~~ - ~~~ - ~~~ _ ~~~ - ~~~ - ~~~ /\\ ~~~\r\n\t\t\r\n\t\tif (_configOptions.sensorEngine !== undefined && \r\n\t\t\t\t_configOptions.sensorEngine !== null) {\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Get sensor options\r\n\t * \r\n\t * @returns {object} Actuator options\r\n\t */\r\n\tgetOptions(){\r\n\t\t\r\n\t\tlet sensor = this;\r\n\t\t\r\n\t\tlet sensorOptions = {\r\n\t\t\t\t\"loopTime\" : sensor.config.loopTime,\r\n\t\t\t\t\"sensorEngineURL\": sensor.config.options.sensorEngineURL\r\n\t\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\tif ( sensor.sensorEngine !== null ) {\r\n\t\t\tsensorOptions.engineOptions = sensor.sensorEngine.getOptions();\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\treturn sensorOptions;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Set sensor options\r\n\t * \r\n\t * @param {object} options Options object\r\n\t */\r\n\tsetOptions(options){\r\n\t\t\r\n\t\tlet sensor = this;\r\n\t\t\r\n\t\tif (sensor.sensorEngine !== undefined && \r\n\t\t\t\tsensor.sensorEngine.state === sensor.sensorEngine.CONSTANTS.States.SEstate_Working) {\r\n\t\t\tthrow \"Bad sensor state.\";\r\n\t\t}\r\n\t\t\r\n\t\tif (options.loopTime) {\r\n\t\t\tsensor.config.loopTime = options.loopTime;\r\n\t\t}\r\n\t\t\r\n\t\tif (options.engineOptions) {\r\n\t\t\tsensor.sensorEngine.setOptions(options.engineOptions);\r\n\t\t}\r\n\t\t\r\n\t\t// Emit event SensorOptionsUpdated\r\n\t\tsensor.eventEmitter.emit(sensor.CONSTANTS.Events.SensorOptionsUpdated, {\"sensor\": sensor});\r\n\t\r\n\t}\r\n\t\r\n\t\r\n}\r\n\r\n\r\n\r\nmodule.exports = Sensor;\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STEngines\\es6"}