{"version":3,"sources":["stEngines/services/ActuatorsManager.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;AAcA,IAAI,eAAe,QAAQ,QAAR,EAAkB,YAArC;;;;;AAMA,IAAM,6BAA6B;;AAElC,WAAW;AACV,mBAAkB;AADR;;AAFuB,CAAnC;;;;;;;;;;;;;;;;;;;;;IA4BM,gB;;;;;;AAKL,6BAAc;AAAA;;AAEb,OAAK,aAAL,GAAqB,EAArB;AACA,OAAK,YAAL,GAAoB,IAAI,YAAJ,EAApB;;AAEA,OAAK,SAAL,GAAiB,0BAAjB;AAEA;;;;;;;;;;;8BAQW,G,EAAK;;AAEhB,OAAI,OAAO,IAAX;;AAGA,OAAI,YAAY,KAAK,eAAL,CAAqB,IAAI,MAAJ,CAAW,EAAhC,CAAhB;;AAEA,OAAI,UAAU,UAAV,KAAyB,IAA7B,EAAmC;AAClC,UAAM,6BAAN;AACA;;AAED,QAAK,aAAL,CAAmB,IAAnB,CAAwB,GAAxB;;;AAGA,QAAK,YAAL,CAAkB,IAAlB,CAAuB,KAAK,SAAL,CAAe,MAAf,CAAsB,aAA7C,EAA4D,GAA5D;AAEA;;;;;;;;;;;kCASe,U,EAAY;;AAE3B,OAAI,OAAO,IAAX;AACA,OAAI,WAAW,IAAf;AACA,OAAI,KAAK,CAAT;;AAEA,QAAK,KAAK,aAAL,CAAmB,GAAnB,CAAuB,UAAS,CAAT,EAAY;AAAC,WAAO,EAAE,MAAF,CAAS,EAAhB;AAAqB,IAAzD,EAA2D,OAA3D,CAAmE,UAAnE,CAAL;AACA,OAAI,OAAO,CAAC,CAAZ,EAAe;AACd,eAAW,KAAK,aAAL,CAAmB,EAAnB,CAAX;AACA;;AAED,UAAO;AACN,kBAAc,QADR;AAEN,gBAAY;AAFN,IAAP;AAIA;;;;;;;;qCAMkB;;AAElB,OAAI,OAAO,IAAX;AACA,OAAI,UAAU,KAAK,aAAnB;;AAEA,WAAQ,OAAR,CAAgB,UAAS,IAAT,EAAe,EAAf,EAAmB;AAClC,QAAK,KAAK,cAAL,KAAwB,IAA7B,EAAoC;AACnC,UAAK,cAAL,CAAoB,UAApB;AACA;AACD,IAJD;;AAMA,WAAQ,GAAR,CAAY,uCAAZ,E;AACA;;;;;;AAOF,IAAI,OAAO;AACV,+BAA+B,0BADrB;AAEV,qBAAqB;AAFX,CAAX;;AAMA,OAAO,OAAP,GAAiB,IAAjB","file":"stEngines/services/ActuatorsManager.js","sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * ActuatorsManager\r\n * \r\n * Generic manager for Actuators\r\n * \r\n */\r\n\r\n\r\n/**\r\n * Import EventEmitter\r\n * @ignore\r\n */\r\nlet EventEmitter = require('events').EventEmitter;\r\n\r\n\r\n/**\r\n * ActuatorsManager CONSTANTS\r\n */\r\nconst ActuatorsManager_CONSTANTS = {\r\n\r\n\t\"Events\" : {\r\n\t\t\"ActuatorAdded\" : \"Actuator Added\"\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * The result object.\r\n * \r\n * @typedef {Object} SearchResult\r\n * @memberof ActuatorsManager\r\n * @type Object\r\n * @property {(Actuator|null)} STactuator - The Actuator object, may be null.\r\n * @property {number} position - The position in list.\r\n * \r\n */\r\n\r\n\r\n\r\n/**\r\n * Actuators manager\r\n * \r\n * @class\r\n * @property {Actuator[]} actuatorsList - List of Actuators.\r\n * @property {object} eventEmitter - Object for emit events.\r\n */\r\nclass ActuatorsManager {\r\n\t\r\n\t/**\r\n\t * @constructs ActuatorsManager\r\n\t */\r\n\tconstructor() {\r\n\t\t\r\n\t\tthis.actuatorsList = [];\r\n\t\tthis.eventEmitter = new EventEmitter();\r\n\t\t\r\n\t\tthis.CONSTANTS = ActuatorsManager_CONSTANTS;\r\n\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Adds actuator\r\n\t * \r\n\t * @param {Actuator} act - Actuator object\r\n\t */\r\n\taddActuator(act) {\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\t\r\n\t\t\r\n\t\tlet actSearch = amng.getActuatorByID(act.config.id);\r\n\t\t\r\n\t\tif (actSearch.STactuator !== null) {\r\n\t\t\tthrow \"Actuator ID already exists.\";\r\n\t\t}\r\n\t\t\r\n\t\tamng.actuatorsList.push(act);\r\n\t\t\r\n\t\t// Emit message ActuatorAdded\r\n\t\tamng.eventEmitter.emit(amng.CONSTANTS.Events.ActuatorAdded, act);\r\n\t\t\r\n\t}\r\n\r\n\t\r\n\t/**\r\n\t * Returns Actuator searched by ID\r\n\t * \r\n\t * @param {string} actuatorID - Actuator ID\r\n\t * @returns {ActuatorsManager.SearchResult} result - Result object\r\n\t */\r\n\tgetActuatorByID(actuatorID) {\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\tlet actuator = null;\r\n\t\tlet _i = 0;\r\n\t\t\r\n\t\t_i = amng.actuatorsList.map(function(x) {return x.config.id; }).indexOf(actuatorID);\r\n\t\tif (_i !== -1) {\r\n\t\t\tactuator = amng.actuatorsList[_i];\r\n\t\t}\r\n\t\t\r\n\t\treturn {\r\n\t\t\t\"STactuator\": actuator,\r\n\t\t\t\"position\": _i\r\n\t\t};\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Turn off actuators\r\n\t */\r\n\tturnOffActuators() {\r\n\t\t\r\n\t\tlet amng = this;\r\n\t\tlet actList = amng.actuatorsList;\r\n\t\t\r\n\t\tactList.forEach(function(act_, _i) {\n\t\t\tif ( act_.actuatorEngine !== null ) {\r\n\t\t\t\tact_.actuatorEngine.stopEngine();\r\n\t\t\t}\n\t\t});\r\n\t\t\r\n\t\tconsole.log('<*> ActuatorsManager.turnOffActuators');\t// TODO REMOVE DEBUG LOG\r\n\t}\r\n\t\r\n\t\r\n\t\r\n}\r\n\r\n\r\nlet _Lib = {\r\n\t\"ActuatorsManager_CONSTANTS\" : ActuatorsManager_CONSTANTS,\r\n\t\"ActuatorsManager\" : ActuatorsManager\r\n};\r\n\r\n\r\nmodule.exports = _Lib;\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STEngines\\es6"}