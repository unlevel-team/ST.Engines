{"version":3,"sources":["stEngines/services/ActuatorsServices.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;AAeA,IAAM,8BAA8B;;AAEnC,aAAa;;AAEZ,sBAAqB,oBAFT;AAGZ,mBAAkB,gBAHN;AAIZ,qBAAoB,mBAJR;AAKZ,kBAAiB,eALL;AAMZ,wBAAuB,sBANX;AAOZ,wBAAuB,sBAPX;AAQZ,qBAAoB,kBARR;AASZ,4BAA2B,0BATf;;AAYZ,mBAAkB,eAZN;AAaZ,qBAAoB,iBAbR;AAcZ,kBAAiB,cAdL;AAeZ,qBAAoB,iBAfR;;AAiBZ,sBAAqB;AAjBT;;AAFsB,CAApC;;;;;;;;;;;;;;;IAqCM,iB;;;;;;;;;;;AAUL,4BAAY,gBAAZ,EAA8B,cAA9B,EAA8C;AAAA;;AAE7C,MAAI,OAAO,IAAX;;AAEA,OAAK,SAAL,GAAiB,2BAAjB;AACA,OAAK,gBAAL,GAAwB,gBAAxB;AACA,OAAK,cAAL,GAAsB,cAAtB;AAEA;;;;;;;;;+BAMY;;AAEZ,OAAI,UAAU,IAAd;;AAEA,OAAI,QAAQ,gBAAR,KAA6B,SAA7B,IACF,QAAQ,gBAAR,KAA6B,IAD/B,EACqC;AACpC,UAAM,+BAAN;AACA;;AAED,OAAI,QAAQ,cAAR,KAA2B,SAA3B,IACF,QAAQ,cAAR,KAA2B,IAD7B,EACmC;AAClC,UAAM,6BAAN;AACA;;AAED,WAAQ,iBAAR,CAA0B,QAAQ,gBAAlC;AACA,WAAQ,mBAAR,CACE,QAAQ,cAAR,CAAuB,MADzB,EAEE;AACC,eAAY;AADb,IAFF;AAMA;;;;;;;;oCAMiB,gB,EAAkB,CAEnC;;;;;;;;;;;;;;sCAYmB,M,EAAQ,O,EAAS;;AAEpC,OAAI,UAAU,IAAd;;AAEA,OAAI,YAAY,SAAhB,EAA2B;AAC1B,cAAU,EAAV;AACA;;AAED,OAAI,QAAQ,OAAR,KAAoB,SAAxB,EAAmC;AAClC,cAAU,QAAQ,OAAlB;AACA;;AAED,OAAI,QAAQ,OAAR,KAAoB,SAApB,IACF,QAAQ,OAAR,KAAoB,IADtB,EAC4B;AAC3B,UAAM,kCAAN;AACA;;AAED,OAAI,WAAW,SAAf,EAA0B;AACzB,aAAS,QAAQ,cAAR,CAAuB,MAAhC;AACA;;AAED,UAAO,EAAP,CAAU,SAAV,EAAqB,UAAS,IAAT,EAAe;AACnC,QAAI,QAAQ,OAAR,KAAoB,IAAxB,EAA8B;AAC7B,aAAQ,mBAAR,CAA4B,MAA5B,EACC;AACC,iBAAY;AADb,MADD;AAIA;AACD,IAPD;;AASA,UAAO,EAAP,CAAU,YAAV,EAAwB,UAAS,IAAT,EAAe;AACtC,YAAQ,qBAAR,CAA8B,MAA9B,EACC;AACC,gBAAY;AADb,KADD;AAIA,IALD;;AAOA,WAAQ,OAAR,GAAkB,IAAlB;AAEA;;;;;;;;;;;;wCAUqB,M,EAAQ,O,EAAS;;AAEtC,OAAI,UAAU,IAAd;;AAEA,OAAI,YAAY,SAAhB,EAA2B;AAC1B,cAAU,EAAV;AACA;;AAED,OAAI,QAAQ,OAAR,KAAoB,SAAxB,EAAmC;AAClC,cAAU,QAAQ,OAAlB;AACA;;AAED,OAAI,QAAQ,OAAR,KAAoB,SAApB,IACF,QAAQ,OAAR,KAAoB,IADtB,EAC4B;AAC3B,UAAM,sCAAN;AACA;;AAED,OAAI,WAAW,SAAf,EAA0B;AACzB,aAAS,QAAQ,cAAR,CAAuB,MAAhC;AACA;AACD;;;;;;AAKF,IAAI,OAAO;;AAEV,gCAA+B,2BAFrB;AAGV,sBAAqB;AAHX,CAAX;;AAOA,OAAO,OAAP,GAAiB,IAAjB","file":"stEngines/services/ActuatorsServices.js","sourcesContent":["\"use strict\";\r\n\r\n/*\r\n SomeThings Actuators services library\r\n\r\n \r\n*/\r\n\r\n\r\n/**\r\n * ActuatorsServices CONSTANTS\r\n * \r\n * @memberof st.ngn.services\r\n * \r\n */\r\nconst ActuatorsServices_CONSTANTS = {\r\n\t\r\n\t\"Messages\" : {\r\n\t\t\r\n\t\t\"getActuatorsList\" : \"Get Actuators List\",\r\n\t\t\"ActuatorsList\" : \"Actuators List\",\r\n\t\t\"getActuatorInfo\" : \"Get Actuator Info\",\r\n\t\t\"ActuatorInfo\" : \"Actuator Info\",\r\n\t\t\"getActuatorOptions\" : \"Get Actuator Options\",\r\n\t\t\"setActuatorOptions\" : \"Set Actuator Options\",\r\n\t\t\"ActuatorOptions\" : \"Actuator Options\",\r\n\t\t\"ActuatorOptionsUpdated\" : \"Actuator Options Updated\",\r\n\r\n\t\t\r\n\t\t\"StartActuator\" : \"StartActuator\",\r\n\t\t\"ActuatorStarted\" : \"ActuatorStarted\",\r\n\t\t\"StopActuator\" : \"StopActuator\",\r\n\t\t\"ActuatorStopped\" : \"ActuatorStopped\",\r\n\t\t\r\n\t\t\"TurnOffActuators\" : \"TurnOffActuators\"\r\n\t}\r\n\r\n};\r\n\r\n\r\n/**\r\n * Actuators Services\r\n * \r\n * manages the control messages related to actuators\r\n * \r\n * @class\r\n * @memberof st.ngn.services\r\n * \r\n * @property {st.ngn.services.ActuatorsManager} actuatorsManager - Actuators manager.\r\n * @property {object} controlChannel - Object for control channel.\r\n * \r\n */\r\nclass ActuatorsServices {\r\n\t\r\n\t/**\r\n\t * \r\n\t * \r\n\t * @constructs ActuatorsServices\r\n\t * \r\n\t * @param {ActuatorsManager} actuatorsManager - Actuators manager\r\n\t * @param {object} controlChannel - Control channel object\r\n\t */\r\n\tconstructor(actuatorsManager, controlChannel) {\r\n\t\t\r\n\t\tlet ssrv = this;\r\n\t\t\r\n\t\tssrv.CONSTANTS = ActuatorsServices_CONSTANTS;\r\n\t\tssrv.actuatorsManager = actuatorsManager;\r\n\t\tssrv.controlChannel = controlChannel;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize\r\n\t */\r\n\tinitialize() {\r\n\t\t\r\n\t\tlet service = this;\r\n\t\t\r\n\t\tif (service.actuatorsManager === undefined ||\r\n\t\t\t\tservice.actuatorsManager === null) {\r\n\t\t\tthrow \"Actuators manager is required\";\r\n\t\t}\r\n\t\t\r\n\t\tif (service.controlChannel === undefined ||\r\n\t\t\t\tservice.controlChannel === null) {\r\n\t\t\tthrow \"Control channel is required\";\r\n\t\t}\r\n\t\t\r\n\t\tservice._mapControlEvents(service.actuatorsManager);\r\n\t\tservice._mapControlMessages(\r\n\t\t\t\tservice.controlChannel.socket,\r\n\t\t\t\t{\r\n\t\t\t\t\t\"service\" : service\r\n\t\t\t\t});\r\n\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Map control events\r\n\t */\r\n\t_mapControlEvents(actuatorsManager) {\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Map control messages\r\n\t * \r\n\t * \r\n\t * @param {object} socket - Socket object\r\n\t * @param {object} options - Options object\r\n\t * @param {st.ngn.services.ActuatorsServices} [options.service] - Actuators Service object\r\n\t * \r\n\t */\r\n\t_mapControlMessages(socket, options) {\r\n\t\t\r\n\t\tlet service = this;\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tif (options.service !== undefined) {\r\n\t\t\tservice = options.service;\r\n\t\t}\r\n\t\t\r\n\t\tif (service._mapped !== undefined && \r\n\t\t\t\tservice._mapped === true) {\r\n\t\t\tthrow \"control messages already mapped.\";\r\n\t\t}\r\n\t\t\r\n\t\tif (socket === undefined) {\r\n\t\t\tsocket = service.controlChannel.socket;\r\n\t\t}\r\n\t\t\r\n\t\tsocket.on(\"connect\", function(data) {\r\n\t\t\tif (service._mapped !== true) {\r\n\t\t\t\tservice._mapControlMessages(socket,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"service\" : service\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tsocket.on(\"disconnect\", function(data) {\r\n\t\t\tservice._unmapControlMessages(socket,\r\n\t\t\t\t{\r\n\t\t\t\t\t\"service\" : service\r\n\t\t\t\t});\r\n\t\t});\r\n\t\t\r\n\t\tservice._mapped = true;\r\n\t\t\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Unmap control messages\r\n\t * \r\n\t * @param {object} socket - Socket object\r\n\t * @param {object} options - Options object\r\n\t * @param {st.ngn.services.ActuatorsServices} [options.service] - Actuators Service object\r\n\t */\r\n\t_unmapControlMessages(socket, options) {\r\n\t\t\r\n\t\tlet service = this;\r\n\t\t\r\n\t\tif (options === undefined) {\r\n\t\t\toptions = {};\r\n\t\t}\r\n\t\t\r\n\t\tif (options.service !== undefined) {\r\n\t\t\tservice = options.service;\r\n\t\t}\r\n\t\t\r\n\t\tif (service._mapped === undefined || \r\n\t\t\t\tservice._mapped !== true) {\r\n\t\t\tthrow \"control messages not already mapped.\";\r\n\t\t}\r\n\t\t\r\n\t\tif (socket === undefined) {\r\n\t\t\tsocket = service.controlChannel.socket;\r\n\t\t}\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\nlet _lib = {\r\n\t\r\n\t\"ActuatorsServices_CONSTANTS\": ActuatorsServices_CONSTANTS,\r\n\t\"ActuatorsServices\": ActuatorsServices\r\n};\r\n\r\n\r\nmodule.exports = _lib;\r\n\t"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STEngines\\es6"}