{"version":3,"sources":["stEngines/ActuatorEngine.js"],"names":[],"mappings":"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","file":"stEngines/ActuatorEngine.js","sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * ActuatorEngine\r\n * \r\n * Generic process for an Actuator\r\n * \r\n * @ignore\r\n */\r\n\r\n/**\r\n * Import EventEmitter\r\n * @ignore\r\n */\r\nlet EventEmitter = require('events').EventEmitter;\r\n\r\n\r\n\r\n/**\r\n * ActuatorEngine CONSTANTS\r\n */\r\nconst ActuatorEngine_CONSTANTS = {\r\n\t\t\r\n\t\"States\" : {\r\n\t\t\"State_Config\" : \"config\",\r\n\t\t\"State_Ready\" : \"ready\",\r\n\t\t\"State_Working\" : \"working\",\r\n\t\t\"State_Stop\" : \"stop\"\r\n\t},\r\n\t\r\n\t\r\n\t\"Events\" : {\r\n\t\t\"MainLoop_Tick\" : \"Main Loop\",\r\n\t\t\"MainLoop_Stop\" : \"Main Loop Stop\",\r\n\t\t\r\n\t\t\"ActuatorEngine_Start\" : \"AE start\",\r\n\t\t\"ActuatorEngine_Stop\" : \"AE stop\",\r\n\r\n\t\t\r\n\t\t\"ActuatorData\" : \"Actuator Data\"\r\n\t\t\r\n\t}\r\n\t\t\r\n};\r\n\r\n\r\n\r\n/**\r\n * ActuatorEngine_Start event.\r\n *\r\n * @event ActuatorEngine#ActuatorEngine_Start\r\n * @type {object}\r\n * @property {object} engine - The engine that is started.\r\n */\r\n\r\n/**\r\n * ActuatorEngine_Stop event.\r\n *\r\n * @event ActuatorEngine#ActuatorEngine_Stop\r\n * @type {object}\r\n * @property {object} engine - The engine that is stopped.\r\n */\r\n\r\n\r\n\r\n/**\r\n * Actuator engine library\r\n * \r\n * @namespace ActuatorEngine_Lib\r\n */\r\nlet ActuatorEngine_Lib = {\r\n\t\r\n\t/**\r\n\t * Initialize actuator engine\r\n\t * \r\n\t * @function\r\n\t * \r\n\t * @param {Actuator} act - Actuator object\r\n\t */\r\n\t\"initialze_ActuatorEngine\" : function (act) {\r\n\t\t\r\n\t\t\r\n\t\t// ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ _ ~~~ - ~~~ - ~~~ - ~~~ _ ~~~ - ~~~ - ~~~ \\/ ~~~\r\n\t\t// Actuator Engine URL \r\n\t\tif (act.config.options.actuatorEngineURL !== undefined && \r\n\t\t\t\tact.config.options.actuatorEngineURL !== null) {\r\n\t\t\t\r\n\t\t\tact._actuatorEngine = null;\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t\tact._actuatorEngine = require(act.config.options.actuatorEngineURL);\r\n\t\t\t\tact.actuatorEngine = new act._actuatorEngine(act.config);\r\n\t\t\t\tact.actuatorEngine.initialize();\r\n\t\t\t\t\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// TODO: handle exception\r\n\t\t\t\t  console.log('<EEE> Actuator.initialize');\t// TODO REMOVE DEBUG LOG\r\n\t\t\t\t  console.log(e);\t// TODO REMOVE DEBUG LOG\r\n\t\t\t}\r\n\t\t} \r\n\t\t// ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ - ~~~ _ ~~~ - ~~~ - ~~~ - ~~~ _ ~~~ - ~~~ - ~~~ /\\ ~~~\r\n\t\t\r\n\t}\r\n\t\r\n};\r\n\r\n\r\n/**\r\n * Actuator Engine\r\n * \r\n * @class\r\n * @property {object} config - Configuration.\r\n * @property {object} _mainLoop - Main loop reference object.\r\n * @property {String} state - State.\r\n * @property {object} eventEmitter - Object for emit events.\r\n * \r\n */\r\nclass ActuatorEngine {\r\n\t\r\n\t/**\r\n\t * @constructs ActuatorEngine\r\n\t * \r\n\t * @param {object} config ActuatorEngine object\r\n\t */\r\n\tconstructor(config) {\r\n\t\t\r\n\t\tthis.config = config;\r\n\t\tthis._mainLoop = null;\r\n\t\t\r\n\t\tthis.state = ActuatorEngine_CONSTANTS.States.State_Config;\r\n\r\n\t\t\r\n\t\tthis.CONSTANTS = ActuatorEngine_CONSTANTS;\r\n\t\t\r\n\t\tthis.eventEmitter = new EventEmitter();\r\n\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Initialize\r\n\t */\r\n\tinitialize() {\r\n\t\t\r\n\t\tlet actuatorEngine = this;\r\n\t\t\r\n\t\tactuatorEngine.eventEmitter.on( actuatorEngine.CONSTANTS.Events.MainLoop_Stop, function() {\r\n\t\t\tclearInterval( actuatorEngine._mainLoop );\r\n\t\t\tactuatorEngine.state = actuatorEngine.CONSTANTS.States.State_Ready;\r\n\t\t});\r\n\t\t\r\n\t\tactuatorEngine.state = actuatorEngine.CONSTANTS.States.State_Ready;\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Main loop\r\n\t */\r\n\tmainLoop() {\r\n\t  let actuatorEngine = this;\r\n\t  \r\n\t  if ( actuatorEngine.state !== actuatorEngine.CONSTANTS.States.State_Ready ) {\r\n\t\t  throw \"Bad state\";\r\n\t  }\r\n\t  \r\n\t  actuatorEngine.state = actuatorEngine.CONSTANTS.States.State_Working;\r\n\t  \r\n\t  actuatorEngine._mainLoop = setInterval(() => {\r\n\t\t  if (actuatorEngine.state === actuatorEngine.CONSTANTS.States.State_Working) {\r\n\t\t\t  actuatorEngine.eventEmitter.emit(actuatorEngine.CONSTANTS.Events.MainLoop_Tick);\r\n\t\t  } else {\r\n\t\t\t  actuatorEngine.eventEmitter.emit(actuatorEngine.CONSTANTS.Events.MainLoop_Stop);\r\n\t\t  }\r\n\t  }, actuatorEngine.config.loopTime);\r\n\t  \r\n\t}\r\n\t\r\n\t/**\r\n\t * Stop main loop\r\n\t */\r\n\tstopMainLoop() {\r\n\t\tlet actuatorEngine = this;\r\n\t\tactuatorEngine.eventEmitter.emit(actuatorEngine.CONSTANTS.Events.MainLoop_Stop);\r\n\t}\r\n\t\r\n\t\r\n\t/**\r\n\t * Start engine\r\n\t * @abstract \r\n\t */\r\n\tstartEngine() {\r\n\t\t\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Stop engine\r\n\t * @abstract \r\n\t */\t\r\n\tstopEngine() {\r\n\t\t\r\n\t}\r\n\t\r\n\t/**\r\n\t * Get options\r\n\t * @abstract \r\n\t * @return {object} Options object\r\n\t */\t\r\n\tgetOptions() {\r\n\t\treturn {};\r\n\t}\r\n\t\r\n\t/**\r\n\t * @abstract \r\n\t * @param {object} options Options object.\r\n\t */\t\r\n\tsetOptions(options) {\r\n\t\t\r\n\t}\r\n}\r\n\r\nlet _lib = {\r\n\t\t\"ActuatorEngine\" : ActuatorEngine,\r\n\t\t\"ActuatorEngine_Lib\" : ActuatorEngine_Lib\r\n\t\t\t\r\n\t};\r\n\r\n\r\nmodule.exports = _lib;\r\n\r\n"],"sourceRoot":"C:\\Users\\Felipe\\Documents\\Work\\SomeThings\\dev\\NLVL_STEngines\\es6"}